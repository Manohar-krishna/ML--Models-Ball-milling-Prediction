{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPnanZwuiC+MBILlZnuTzLX"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"z61iQro16JeQ","executionInfo":{"status":"ok","timestamp":1746073412670,"user_tz":-330,"elapsed":486803,"user":{"displayName":"052_ Manohar","userId":"01100236410199775712"}},"outputId":"02bb0874-444b-4684-e745-2d7d69b99826"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting Optuna\n","  Downloading optuna-4.3.0-py3-none-any.whl.metadata (17 kB)\n","Collecting alembic>=1.5.0 (from Optuna)\n","  Downloading alembic-1.15.2-py3-none-any.whl.metadata (7.3 kB)\n","Collecting colorlog (from Optuna)\n","  Downloading colorlog-6.9.0-py3-none-any.whl.metadata (10 kB)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from Optuna) (2.0.2)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from Optuna) (24.2)\n","Requirement already satisfied: sqlalchemy>=1.4.2 in /usr/local/lib/python3.11/dist-packages (from Optuna) (2.0.40)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from Optuna) (4.67.1)\n","Requirement already satisfied: PyYAML in /usr/local/lib/python3.11/dist-packages (from Optuna) (6.0.2)\n","Requirement already satisfied: Mako in /usr/lib/python3/dist-packages (from alembic>=1.5.0->Optuna) (1.1.3)\n","Requirement already satisfied: typing-extensions>=4.12 in /usr/local/lib/python3.11/dist-packages (from alembic>=1.5.0->Optuna) (4.13.2)\n","Requirement already satisfied: greenlet>=1 in /usr/local/lib/python3.11/dist-packages (from sqlalchemy>=1.4.2->Optuna) (3.2.1)\n","Downloading optuna-4.3.0-py3-none-any.whl (386 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m386.6/386.6 kB\u001b[0m \u001b[31m7.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading alembic-1.15.2-py3-none-any.whl (231 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m231.9/231.9 kB\u001b[0m \u001b[31m18.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading colorlog-6.9.0-py3-none-any.whl (11 kB)\n","Installing collected packages: colorlog, alembic, Optuna\n","Successfully installed Optuna-4.3.0 alembic-1.15.2 colorlog-6.9.0\n","Dataset shape: (180, 7)\n","\n","First 5 rows:\n","   RPM  Time(h) Ball size  Magnification      Ds       De  Sphericity ?\n","0  600       24      10mm           2000   4.673   7.4950      0.656078\n","1  600       24      10mm           2000   6.093  10.3375      0.626821\n","2  600       24      10mm           2000  11.232  13.3295      0.849714\n","3  600       24      10mm           2000  17.121  20.8080      0.831604\n","4  600       24      10mm           2000   6.607   6.9270      0.954483\n"]},{"output_type":"stream","name":"stderr","text":["[I 2025-05-01 04:15:36,669] A new study created in memory with name: no-name-6ab94d50-7915-47e5-89c8-7c54c8e48496\n"]},{"output_type":"stream","name":"stdout","text":["\n","Number of features after preprocessing: 7\n","\n","===============================================\n","PART 1: MODEL HYPERPARAMETER OPTIMIZATION\n","===============================================\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:15:51,343] Trial 0 finished with value: 0.0020006923004984856 and parameters: {'n_layers': 3, 'learning_rate': 0.0021220762602793485, 'activation': 'relu', 'dropout_rate': 0.002508399381729809, 'n_units_0': 44, 'n_units_1': 31, 'n_units_2': 32, 'batch_size': 8}. Best is trial 0 with value: 0.0020006923004984856.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:16:06,152] Trial 1 finished with value: 0.0038888987619429827 and parameters: {'n_layers': 5, 'learning_rate': 0.001065816786903145, 'activation': 'tanh', 'dropout_rate': 0.09900011844201284, 'n_units_0': 83, 'n_units_1': 99, 'n_units_2': 53, 'n_units_3': 29, 'n_units_4': 104, 'batch_size': 64}. Best is trial 0 with value: 0.0020006923004984856.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:16:22,749] Trial 2 finished with value: 0.02085929736495018 and parameters: {'n_layers': 4, 'learning_rate': 0.0002162488699301551, 'activation': 'tanh', 'dropout_rate': 0.3668335318828287, 'n_units_0': 16, 'n_units_1': 110, 'n_units_2': 82, 'n_units_3': 84, 'batch_size': 64}. Best is trial 0 with value: 0.0020006923004984856.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:16:36,741] Trial 3 finished with value: 0.016088038682937622 and parameters: {'n_layers': 4, 'learning_rate': 0.00017189449212663083, 'activation': 'elu', 'dropout_rate': 0.4518091470093864, 'n_units_0': 103, 'n_units_1': 99, 'n_units_2': 94, 'n_units_3': 87, 'batch_size': 64}. Best is trial 0 with value: 0.0020006923004984856.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:16:55,286] Trial 4 finished with value: 0.028384646400809288 and parameters: {'n_layers': 2, 'learning_rate': 0.0001415882649109872, 'activation': 'relu', 'dropout_rate': 0.442911932197018, 'n_units_0': 15, 'n_units_1': 128, 'batch_size': 8}. Best is trial 0 with value: 0.0020006923004984856.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:17:11,909] Trial 5 finished with value: 0.0013195150531828403 and parameters: {'n_layers': 5, 'learning_rate': 0.029256991673061436, 'activation': 'relu', 'dropout_rate': 0.016320394137813443, 'n_units_0': 52, 'n_units_1': 33, 'n_units_2': 55, 'n_units_3': 126, 'n_units_4': 52, 'batch_size': 32}. Best is trial 5 with value: 0.0013195150531828403.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:17:25,527] Trial 6 finished with value: 0.0025393026880919933 and parameters: {'n_layers': 1, 'learning_rate': 0.025486157329046442, 'activation': 'relu', 'dropout_rate': 0.1361318068534068, 'n_units_0': 78, 'batch_size': 16}. Best is trial 5 with value: 0.0013195150531828403.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:17:39,082] Trial 7 finished with value: 0.0025103583466261625 and parameters: {'n_layers': 2, 'learning_rate': 0.027239939422223407, 'activation': 'relu', 'dropout_rate': 0.0329211679930404, 'n_units_0': 63, 'n_units_1': 44, 'batch_size': 8}. Best is trial 5 with value: 0.0013195150531828403.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:17:52,240] Trial 8 finished with value: 0.0027223206125199795 and parameters: {'n_layers': 1, 'learning_rate': 0.030571452766740465, 'activation': 'elu', 'dropout_rate': 0.30272245462075403, 'n_units_0': 42, 'batch_size': 64}. Best is trial 5 with value: 0.0013195150531828403.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:18:00,037] Trial 9 finished with value: 0.0031676050275564194 and parameters: {'n_layers': 1, 'learning_rate': 0.010973191140405304, 'activation': 'elu', 'dropout_rate': 0.11796839822596816, 'n_units_0': 81, 'batch_size': 16}. Best is trial 5 with value: 0.0013195150531828403.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:18:15,677] Trial 10 finished with value: 0.47550931572914124 and parameters: {'n_layers': 5, 'learning_rate': 1.0921553964962333e-05, 'activation': 'relu', 'dropout_rate': 0.2207891093105382, 'n_units_0': 122, 'n_units_1': 15, 'n_units_2': 10, 'n_units_3': 125, 'n_units_4': 18, 'batch_size': 32}. Best is trial 5 with value: 0.0013195150531828403.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:18:30,488] Trial 11 finished with value: 0.0048285252414643764 and parameters: {'n_layers': 3, 'learning_rate': 0.0019589949122913223, 'activation': 'relu', 'dropout_rate': 0.013028172641723332, 'n_units_0': 45, 'n_units_1': 37, 'n_units_2': 38, 'batch_size': 32}. Best is trial 5 with value: 0.0013195150531828403.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:18:45,278] Trial 12 finished with value: 0.0027367097791284323 and parameters: {'n_layers': 3, 'learning_rate': 0.005541334590101569, 'activation': 'relu', 'dropout_rate': 0.0018374681379539632, 'n_units_0': 44, 'n_units_1': 62, 'n_units_2': 34, 'batch_size': 32}. Best is trial 5 with value: 0.0013195150531828403.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:18:57,709] Trial 13 finished with value: 0.016300542280077934 and parameters: {'n_layers': 4, 'learning_rate': 0.08890815763329493, 'activation': 'relu', 'dropout_rate': 0.202372438440765, 'n_units_0': 56, 'n_units_1': 11, 'n_units_2': 128, 'n_units_3': 126, 'batch_size': 8}. Best is trial 5 with value: 0.0013195150531828403.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:19:11,909] Trial 14 finished with value: 0.0029106736183166504 and parameters: {'n_layers': 2, 'learning_rate': 0.0036742772356695634, 'activation': 'relu', 'dropout_rate': 0.08534712985555008, 'n_units_0': 30, 'n_units_1': 37, 'batch_size': 8}. Best is trial 5 with value: 0.0013195150531828403.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:19:22,394] Trial 15 finished with value: 0.017048630863428116 and parameters: {'n_layers': 3, 'learning_rate': 0.0004811433892520566, 'activation': 'tanh', 'dropout_rate': 0.17253175393152198, 'n_units_0': 29, 'n_units_1': 65, 'n_units_2': 13, 'batch_size': 32}. Best is trial 5 with value: 0.0013195150531828403.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:19:42,722] Trial 16 finished with value: 0.12352614849805832 and parameters: {'n_layers': 5, 'learning_rate': 1.7225564493203627e-05, 'activation': 'relu', 'dropout_rate': 0.28954978864889735, 'n_units_0': 59, 'n_units_1': 26, 'n_units_2': 61, 'n_units_3': 39, 'n_units_4': 47, 'batch_size': 8}. Best is trial 5 with value: 0.0013195150531828403.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:19:50,057] Trial 17 finished with value: 0.017006423324346542 and parameters: {'n_layers': 4, 'learning_rate': 0.087579601569558, 'activation': 'relu', 'dropout_rate': 0.059538765411213994, 'n_units_0': 99, 'n_units_1': 50, 'n_units_2': 42, 'n_units_3': 62, 'batch_size': 32}. Best is trial 5 with value: 0.0013195150531828403.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:20:06,502] Trial 18 finished with value: 0.00987462792545557 and parameters: {'n_layers': 4, 'learning_rate': 3.8442716681408225e-05, 'activation': 'elu', 'dropout_rate': 0.1588709436661026, 'n_units_0': 30, 'n_units_1': 76, 'n_units_2': 77, 'n_units_3': 8, 'batch_size': 16}. Best is trial 5 with value: 0.0013195150531828403.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:20:23,641] Trial 19 finished with value: 0.0012983070919290185 and parameters: {'n_layers': 2, 'learning_rate': 0.009388105861257828, 'activation': 'tanh', 'dropout_rate': 0.06083555224893756, 'n_units_0': 8, 'n_units_1': 26, 'batch_size': 8}. Best is trial 19 with value: 0.0012983070919290185.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:20:34,187] Trial 20 finished with value: 0.0029405001550912857 and parameters: {'n_layers': 2, 'learning_rate': 0.009822938170684284, 'activation': 'tanh', 'dropout_rate': 0.06629439791954175, 'n_units_0': 17, 'n_units_1': 20, 'batch_size': 32}. Best is trial 19 with value: 0.0012983070919290185.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:20:47,849] Trial 21 finished with value: 0.0020413128659129143 and parameters: {'n_layers': 3, 'learning_rate': 0.001967767475257252, 'activation': 'tanh', 'dropout_rate': 0.004268634129182736, 'n_units_0': 8, 'n_units_1': 28, 'n_units_2': 25, 'batch_size': 8}. Best is trial 19 with value: 0.0012983070919290185.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:20:59,897] Trial 22 finished with value: 0.002217813627794385 and parameters: {'n_layers': 3, 'learning_rate': 0.00910856958528872, 'activation': 'tanh', 'dropout_rate': 0.0595534207672018, 'n_units_0': 71, 'n_units_1': 52, 'n_units_2': 52, 'batch_size': 8}. Best is trial 19 with value: 0.0012983070919290185.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:21:08,337] Trial 23 finished with value: 0.002932261675596237 and parameters: {'n_layers': 2, 'learning_rate': 0.0034727357000900764, 'activation': 'tanh', 'dropout_rate': 0.04681918148209724, 'n_units_0': 52, 'n_units_1': 9, 'batch_size': 8}. Best is trial 19 with value: 0.0012983070919290185.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:21:25,025] Trial 24 finished with value: 0.0018911284860223532 and parameters: {'n_layers': 3, 'learning_rate': 0.01884717745382891, 'activation': 'relu', 'dropout_rate': 0.11086680096155582, 'n_units_0': 37, 'n_units_1': 30, 'n_units_2': 25, 'batch_size': 8}. Best is trial 19 with value: 0.0012983070919290185.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:21:42,431] Trial 25 finished with value: 0.0006788248429074883 and parameters: {'n_layers': 2, 'learning_rate': 0.05414469358089124, 'activation': 'tanh', 'dropout_rate': 0.11567343580734234, 'n_units_0': 23, 'n_units_1': 80, 'batch_size': 8}. Best is trial 25 with value: 0.0006788248429074883.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:21:58,407] Trial 26 finished with value: 0.0021522503811866045 and parameters: {'n_layers': 2, 'learning_rate': 0.04091391825055609, 'activation': 'tanh', 'dropout_rate': 0.155810962412614, 'n_units_0': 23, 'n_units_1': 83, 'batch_size': 32}. Best is trial 25 with value: 0.0006788248429074883.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:22:13,808] Trial 27 finished with value: 0.0016418038867413998 and parameters: {'n_layers': 1, 'learning_rate': 0.060159356129143256, 'activation': 'tanh', 'dropout_rate': 0.24652319023405642, 'n_units_0': 10, 'batch_size': 16}. Best is trial 25 with value: 0.0006788248429074883.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:22:29,532] Trial 28 finished with value: 0.0022735444363206625 and parameters: {'n_layers': 2, 'learning_rate': 0.014776227423587293, 'activation': 'tanh', 'dropout_rate': 0.18821014119234294, 'n_units_0': 20, 'n_units_1': 83, 'batch_size': 8}. Best is trial 25 with value: 0.0006788248429074883.\n","/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","[I 2025-05-01 04:22:43,763] Trial 29 finished with value: 0.002304421504959464 and parameters: {'n_layers': 1, 'learning_rate': 0.0481204947369216, 'activation': 'tanh', 'dropout_rate': 0.09781346166678692, 'n_units_0': 35, 'batch_size': 8}. Best is trial 25 with value: 0.0006788248429074883.\n"]},{"output_type":"stream","name":"stdout","text":["\n","Best hyperparameters:\n","n_layers: 2\n","learning_rate: 0.05414469358089124\n","activation: tanh\n","dropout_rate: 0.11567343580734234\n","n_units_0: 23\n","n_units_1: 80\n","batch_size: 8\n","Epoch 1/200\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"]},{"output_type":"stream","name":"stdout","text":["\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 18ms/step - loss: 1.1825 - mean_absolute_error: 0.7985 - val_loss: 0.1506 - val_mean_absolute_error: 0.3144\n","Epoch 2/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.2334 - mean_absolute_error: 0.3803 - val_loss: 0.1404 - val_mean_absolute_error: 0.3230\n","Epoch 3/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.3224 - mean_absolute_error: 0.4692 - val_loss: 0.2682 - val_mean_absolute_error: 0.4280\n","Epoch 4/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.2081 - mean_absolute_error: 0.3766 - val_loss: 0.1807 - val_mean_absolute_error: 0.3709\n","Epoch 5/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.1682 - mean_absolute_error: 0.3390 - val_loss: 0.2464 - val_mean_absolute_error: 0.4123\n","Epoch 6/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.3442 - mean_absolute_error: 0.4994 - val_loss: 0.1802 - val_mean_absolute_error: 0.3326\n","Epoch 7/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0758 - mean_absolute_error: 0.2127 - val_loss: 0.0156 - val_mean_absolute_error: 0.1049\n","Epoch 8/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0635 - mean_absolute_error: 0.1997 - val_loss: 0.0433 - val_mean_absolute_error: 0.1649\n","Epoch 9/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0581 - mean_absolute_error: 0.1963 - val_loss: 0.0342 - val_mean_absolute_error: 0.1547\n","Epoch 10/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0440 - mean_absolute_error: 0.1809 - val_loss: 0.0259 - val_mean_absolute_error: 0.1270\n","Epoch 11/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0299 - mean_absolute_error: 0.1369 - val_loss: 0.0126 - val_mean_absolute_error: 0.0889\n","Epoch 12/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0227 - mean_absolute_error: 0.1232 - val_loss: 0.0119 - val_mean_absolute_error: 0.0951\n","Epoch 13/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0178 - mean_absolute_error: 0.1118 - val_loss: 0.0095 - val_mean_absolute_error: 0.0843\n","Epoch 14/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 0.0169 - mean_absolute_error: 0.1049 - val_loss: 0.0062 - val_mean_absolute_error: 0.0597\n","Epoch 15/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0153 - mean_absolute_error: 0.0945 - val_loss: 0.0102 - val_mean_absolute_error: 0.0810\n","Epoch 16/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0155 - mean_absolute_error: 0.0951 - val_loss: 0.0092 - val_mean_absolute_error: 0.0797\n","Epoch 17/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0058 - mean_absolute_error: 0.0591 - val_loss: 0.0031 - val_mean_absolute_error: 0.0418\n","Epoch 18/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0055 - mean_absolute_error: 0.0621 - val_loss: 0.0091 - val_mean_absolute_error: 0.0724\n","Epoch 19/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0079 - mean_absolute_error: 0.0687 - val_loss: 0.0059 - val_mean_absolute_error: 0.0624\n","Epoch 20/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0091 - mean_absolute_error: 0.0753 - val_loss: 0.0102 - val_mean_absolute_error: 0.0802\n","Epoch 21/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0091 - mean_absolute_error: 0.0768 - val_loss: 0.0045 - val_mean_absolute_error: 0.0556\n","Epoch 22/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0048 - mean_absolute_error: 0.0558 - val_loss: 0.0025 - val_mean_absolute_error: 0.0370\n","Epoch 23/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0037 - mean_absolute_error: 0.0495 - val_loss: 0.0039 - val_mean_absolute_error: 0.0525\n","Epoch 24/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0063 - mean_absolute_error: 0.0629 - val_loss: 0.0048 - val_mean_absolute_error: 0.0554\n","Epoch 25/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0044 - mean_absolute_error: 0.0535 - val_loss: 0.0030 - val_mean_absolute_error: 0.0411\n","Epoch 26/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 0.0031 - mean_absolute_error: 0.0436 - val_loss: 0.0022 - val_mean_absolute_error: 0.0349\n","Epoch 27/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0036 - mean_absolute_error: 0.0458 - val_loss: 0.0045 - val_mean_absolute_error: 0.0509\n","Epoch 28/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0032 - mean_absolute_error: 0.0464 - val_loss: 0.0026 - val_mean_absolute_error: 0.0399\n","Epoch 29/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0038 - mean_absolute_error: 0.0490 - val_loss: 0.0034 - val_mean_absolute_error: 0.0466\n","Epoch 30/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0031 - mean_absolute_error: 0.0472 - val_loss: 0.0035 - val_mean_absolute_error: 0.0468\n","Epoch 31/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 0.0047 - mean_absolute_error: 0.0538 - val_loss: 0.0036 - val_mean_absolute_error: 0.0444\n","Epoch 32/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0033 - mean_absolute_error: 0.0459 - val_loss: 0.0035 - val_mean_absolute_error: 0.0479\n","Epoch 33/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0024 - mean_absolute_error: 0.0363 - val_loss: 0.0029 - val_mean_absolute_error: 0.0399\n","Epoch 34/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 0.0039 - mean_absolute_error: 0.0486 - val_loss: 0.0047 - val_mean_absolute_error: 0.0565\n","Epoch 35/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0052 - mean_absolute_error: 0.0581 - val_loss: 0.0039 - val_mean_absolute_error: 0.0509\n","Epoch 36/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 0.0037 - mean_absolute_error: 0.0490 - val_loss: 0.0049 - val_mean_absolute_error: 0.0581\n","Epoch 37/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 0.0035 - mean_absolute_error: 0.0452 - val_loss: 0.0028 - val_mean_absolute_error: 0.0410\n","Epoch 38/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 12ms/step - loss: 0.0028 - mean_absolute_error: 0.0422 - val_loss: 0.0019 - val_mean_absolute_error: 0.0346\n","Epoch 39/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 13ms/step - loss: 0.0031 - mean_absolute_error: 0.0446 - val_loss: 0.0025 - val_mean_absolute_error: 0.0382\n","Epoch 40/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 12ms/step - loss: 0.0022 - mean_absolute_error: 0.0350 - val_loss: 0.0020 - val_mean_absolute_error: 0.0345\n","Epoch 41/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 0.0032 - mean_absolute_error: 0.0446 - val_loss: 0.0025 - val_mean_absolute_error: 0.0419\n","Epoch 42/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 12ms/step - loss: 0.0033 - mean_absolute_error: 0.0458 - val_loss: 0.0026 - val_mean_absolute_error: 0.0371\n","Epoch 43/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 11ms/step - loss: 0.0022 - mean_absolute_error: 0.0365 - val_loss: 0.0030 - val_mean_absolute_error: 0.0430\n","Epoch 44/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0030 - mean_absolute_error: 0.0404 - val_loss: 0.0024 - val_mean_absolute_error: 0.0366\n","Epoch 45/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0019 - mean_absolute_error: 0.0361 - val_loss: 0.0022 - val_mean_absolute_error: 0.0365\n","Epoch 46/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0022 - mean_absolute_error: 0.0383 - val_loss: 0.0030 - val_mean_absolute_error: 0.0406\n","Epoch 47/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0022 - mean_absolute_error: 0.0375 - val_loss: 0.0018 - val_mean_absolute_error: 0.0349\n","Epoch 48/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0027 - mean_absolute_error: 0.0397 - val_loss: 0.0026 - val_mean_absolute_error: 0.0377\n","Epoch 49/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 0.0025 - mean_absolute_error: 0.0390 - val_loss: 0.0030 - val_mean_absolute_error: 0.0434\n","Epoch 50/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0026 - mean_absolute_error: 0.0386 - val_loss: 0.0026 - val_mean_absolute_error: 0.0408\n","Epoch 51/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0020 - mean_absolute_error: 0.0363 - val_loss: 0.0022 - val_mean_absolute_error: 0.0375\n","Epoch 52/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0023 - mean_absolute_error: 0.0394 - val_loss: 0.0027 - val_mean_absolute_error: 0.0381\n","Epoch 53/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0019 - mean_absolute_error: 0.0350 - val_loss: 0.0019 - val_mean_absolute_error: 0.0350\n","Epoch 54/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0022 - mean_absolute_error: 0.0347 - val_loss: 0.0016 - val_mean_absolute_error: 0.0309\n","Epoch 55/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0023 - mean_absolute_error: 0.0371 - val_loss: 0.0023 - val_mean_absolute_error: 0.0387\n","Epoch 56/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0027 - mean_absolute_error: 0.0379 - val_loss: 0.0016 - val_mean_absolute_error: 0.0314\n","Epoch 57/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0027 - mean_absolute_error: 0.0389 - val_loss: 0.0024 - val_mean_absolute_error: 0.0371\n","Epoch 58/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0016 - mean_absolute_error: 0.0309 - val_loss: 0.0037 - val_mean_absolute_error: 0.0476\n","Epoch 59/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0034 - mean_absolute_error: 0.0463 - val_loss: 0.0040 - val_mean_absolute_error: 0.0555\n","Epoch 60/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0049 - mean_absolute_error: 0.0535 - val_loss: 0.0030 - val_mean_absolute_error: 0.0444\n","Epoch 61/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 0.0033 - mean_absolute_error: 0.0444 - val_loss: 0.0059 - val_mean_absolute_error: 0.0653\n","Epoch 62/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0041 - mean_absolute_error: 0.0500 - val_loss: 0.0017 - val_mean_absolute_error: 0.0297\n","Epoch 63/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0027 - mean_absolute_error: 0.0414 - val_loss: 0.0028 - val_mean_absolute_error: 0.0430\n","Epoch 64/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0028 - mean_absolute_error: 0.0420 - val_loss: 0.0026 - val_mean_absolute_error: 0.0399\n","Epoch 65/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0021 - mean_absolute_error: 0.0379 - val_loss: 0.0018 - val_mean_absolute_error: 0.0331\n","Epoch 66/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0024 - mean_absolute_error: 0.0387 - val_loss: 0.0021 - val_mean_absolute_error: 0.0368\n","Epoch 67/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0030 - mean_absolute_error: 0.0408 - val_loss: 0.0017 - val_mean_absolute_error: 0.0317\n","Epoch 68/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0016 - mean_absolute_error: 0.0329 - val_loss: 0.0024 - val_mean_absolute_error: 0.0391\n","Epoch 69/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0018 - mean_absolute_error: 0.0326 - val_loss: 0.0017 - val_mean_absolute_error: 0.0289\n","Epoch 70/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0022 - mean_absolute_error: 0.0381 - val_loss: 0.0015 - val_mean_absolute_error: 0.0297\n","Epoch 71/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0014 - mean_absolute_error: 0.0283 - val_loss: 0.0017 - val_mean_absolute_error: 0.0327\n","Epoch 72/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 0.0021 - mean_absolute_error: 0.0339 - val_loss: 0.0019 - val_mean_absolute_error: 0.0383\n","Epoch 73/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0023 - mean_absolute_error: 0.0389 - val_loss: 0.0021 - val_mean_absolute_error: 0.0378\n","Epoch 74/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0022 - mean_absolute_error: 0.0375 - val_loss: 0.0019 - val_mean_absolute_error: 0.0308\n","Epoch 75/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0022 - mean_absolute_error: 0.0379 - val_loss: 0.0022 - val_mean_absolute_error: 0.0357\n","Epoch 76/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 0.0016 - mean_absolute_error: 0.0326 - val_loss: 0.0021 - val_mean_absolute_error: 0.0359\n","Epoch 77/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0031 - mean_absolute_error: 0.0437 - val_loss: 0.0052 - val_mean_absolute_error: 0.0595\n","Epoch 78/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0037 - mean_absolute_error: 0.0499 - val_loss: 0.0017 - val_mean_absolute_error: 0.0326\n","Epoch 79/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0026 - mean_absolute_error: 0.0407 - val_loss: 0.0025 - val_mean_absolute_error: 0.0421\n","Epoch 80/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0021 - mean_absolute_error: 0.0356 - val_loss: 0.0041 - val_mean_absolute_error: 0.0543\n","Epoch 81/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0029 - mean_absolute_error: 0.0417 - val_loss: 0.0017 - val_mean_absolute_error: 0.0334\n","Epoch 82/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0021 - mean_absolute_error: 0.0363 - val_loss: 0.0025 - val_mean_absolute_error: 0.0387\n","Epoch 83/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0019 - mean_absolute_error: 0.0337 - val_loss: 0.0016 - val_mean_absolute_error: 0.0307\n","Epoch 84/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0016 - mean_absolute_error: 0.0314 - val_loss: 0.0017 - val_mean_absolute_error: 0.0340\n","Epoch 85/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0020 - mean_absolute_error: 0.0375 - val_loss: 0.0013 - val_mean_absolute_error: 0.0275\n","Epoch 86/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0028 - mean_absolute_error: 0.0413 - val_loss: 0.0016 - val_mean_absolute_error: 0.0280\n","Epoch 87/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0026 - mean_absolute_error: 0.0373 - val_loss: 0.0021 - val_mean_absolute_error: 0.0380\n","Epoch 88/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0042 - mean_absolute_error: 0.0548 - val_loss: 0.0013 - val_mean_absolute_error: 0.0279\n","Epoch 89/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0028 - mean_absolute_error: 0.0392 - val_loss: 0.0018 - val_mean_absolute_error: 0.0355\n","Epoch 90/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0020 - mean_absolute_error: 0.0351 - val_loss: 0.0014 - val_mean_absolute_error: 0.0291\n","Epoch 91/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0021 - mean_absolute_error: 0.0357 - val_loss: 0.0011 - val_mean_absolute_error: 0.0236\n","Epoch 92/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0019 - mean_absolute_error: 0.0334 - val_loss: 0.0017 - val_mean_absolute_error: 0.0329\n","Epoch 93/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 0.0016 - mean_absolute_error: 0.0334 - val_loss: 0.0025 - val_mean_absolute_error: 0.0415\n","Epoch 94/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0033 - mean_absolute_error: 0.0454 - val_loss: 0.0017 - val_mean_absolute_error: 0.0288\n","Epoch 95/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 0.0017 - mean_absolute_error: 0.0328 - val_loss: 0.0023 - val_mean_absolute_error: 0.0365\n","Epoch 96/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0021 - mean_absolute_error: 0.0362 - val_loss: 0.0018 - val_mean_absolute_error: 0.0347\n","Epoch 97/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0023 - mean_absolute_error: 0.0397 - val_loss: 0.0014 - val_mean_absolute_error: 0.0260\n","Epoch 98/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0018 - mean_absolute_error: 0.0342 - val_loss: 0.0021 - val_mean_absolute_error: 0.0343\n","Epoch 99/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0017 - mean_absolute_error: 0.0317 - val_loss: 0.0029 - val_mean_absolute_error: 0.0455\n","Epoch 100/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0020 - mean_absolute_error: 0.0341 - val_loss: 0.0026 - val_mean_absolute_error: 0.0405\n","Epoch 101/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0023 - mean_absolute_error: 0.0381 - val_loss: 0.0016 - val_mean_absolute_error: 0.0327\n","Epoch 102/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0015 - mean_absolute_error: 0.0305 - val_loss: 0.0018 - val_mean_absolute_error: 0.0325\n","Epoch 103/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0014 - mean_absolute_error: 0.0275 - val_loss: 0.0015 - val_mean_absolute_error: 0.0316\n","Epoch 104/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0024 - mean_absolute_error: 0.0407 - val_loss: 0.0018 - val_mean_absolute_error: 0.0320\n","Epoch 105/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0026 - mean_absolute_error: 0.0400 - val_loss: 0.0013 - val_mean_absolute_error: 0.0271\n","Epoch 106/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0016 - mean_absolute_error: 0.0322 - val_loss: 0.0014 - val_mean_absolute_error: 0.0295\n","Epoch 107/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0013 - mean_absolute_error: 0.0288 - val_loss: 0.0011 - val_mean_absolute_error: 0.0235\n","Epoch 108/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0014 - mean_absolute_error: 0.0293 - val_loss: 0.0010 - val_mean_absolute_error: 0.0258\n","Epoch 109/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0024 - mean_absolute_error: 0.0387 - val_loss: 0.0033 - val_mean_absolute_error: 0.0432\n","Epoch 110/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 0.0017 - mean_absolute_error: 0.0321 - val_loss: 0.0014 - val_mean_absolute_error: 0.0304\n","Epoch 111/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 12ms/step - loss: 0.0038 - mean_absolute_error: 0.0488 - val_loss: 0.0024 - val_mean_absolute_error: 0.0388\n","Epoch 112/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 11ms/step - loss: 0.0027 - mean_absolute_error: 0.0415 - val_loss: 0.0042 - val_mean_absolute_error: 0.0542\n","Epoch 113/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 12ms/step - loss: 0.0027 - mean_absolute_error: 0.0411 - val_loss: 0.0015 - val_mean_absolute_error: 0.0317\n","Epoch 114/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 12ms/step - loss: 0.0020 - mean_absolute_error: 0.0360 - val_loss: 0.0019 - val_mean_absolute_error: 0.0347\n","Epoch 115/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 12ms/step - loss: 0.0019 - mean_absolute_error: 0.0343 - val_loss: 0.0018 - val_mean_absolute_error: 0.0325\n","Epoch 116/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 13ms/step - loss: 0.0015 - mean_absolute_error: 0.0301 - val_loss: 0.0019 - val_mean_absolute_error: 0.0350\n","Epoch 117/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 11ms/step - loss: 0.0019 - mean_absolute_error: 0.0338 - val_loss: 0.0022 - val_mean_absolute_error: 0.0397\n","Epoch 118/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0015 - mean_absolute_error: 0.0327 - val_loss: 0.0023 - val_mean_absolute_error: 0.0379\n","Epoch 119/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 0.0018 - mean_absolute_error: 0.0348 - val_loss: 0.0022 - val_mean_absolute_error: 0.0381\n","Epoch 120/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0019 - mean_absolute_error: 0.0322 - val_loss: 0.0019 - val_mean_absolute_error: 0.0351\n","Epoch 121/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0016 - mean_absolute_error: 0.0313 - val_loss: 0.0014 - val_mean_absolute_error: 0.0272\n","Epoch 122/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0018 - mean_absolute_error: 0.0344 - val_loss: 9.9547e-04 - val_mean_absolute_error: 0.0230\n","Epoch 123/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0012 - mean_absolute_error: 0.0284 - val_loss: 0.0017 - val_mean_absolute_error: 0.0358\n","Epoch 124/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0018 - mean_absolute_error: 0.0345 - val_loss: 0.0015 - val_mean_absolute_error: 0.0307\n","Epoch 125/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0017 - mean_absolute_error: 0.0336 - val_loss: 0.0029 - val_mean_absolute_error: 0.0411\n","Epoch 126/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0017 - mean_absolute_error: 0.0307 - val_loss: 0.0014 - val_mean_absolute_error: 0.0320\n","Epoch 127/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0018 - mean_absolute_error: 0.0339 - val_loss: 0.0015 - val_mean_absolute_error: 0.0273\n","Epoch 128/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0015 - mean_absolute_error: 0.0299 - val_loss: 0.0019 - val_mean_absolute_error: 0.0337\n","Epoch 129/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 0.0015 - mean_absolute_error: 0.0291 - val_loss: 0.0010 - val_mean_absolute_error: 0.0227\n","Epoch 130/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0011 - mean_absolute_error: 0.0268 - val_loss: 0.0014 - val_mean_absolute_error: 0.0294\n","Epoch 131/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0021 - mean_absolute_error: 0.0376 - val_loss: 0.0014 - val_mean_absolute_error: 0.0247\n","Epoch 132/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0016 - mean_absolute_error: 0.0319 - val_loss: 0.0021 - val_mean_absolute_error: 0.0385\n","Epoch 133/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 0.0015 - mean_absolute_error: 0.0327 - val_loss: 0.0011 - val_mean_absolute_error: 0.0270\n","Epoch 134/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0017 - mean_absolute_error: 0.0329 - val_loss: 0.0040 - val_mean_absolute_error: 0.0531\n","Epoch 135/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0033 - mean_absolute_error: 0.0443 - val_loss: 0.0027 - val_mean_absolute_error: 0.0456\n","Epoch 136/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0027 - mean_absolute_error: 0.0418 - val_loss: 0.0052 - val_mean_absolute_error: 0.0589\n","Epoch 137/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0034 - mean_absolute_error: 0.0496 - val_loss: 0.0020 - val_mean_absolute_error: 0.0392\n","Epoch 138/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0033 - mean_absolute_error: 0.0476 - val_loss: 0.0028 - val_mean_absolute_error: 0.0410\n","Epoch 139/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0024 - mean_absolute_error: 0.0383 - val_loss: 0.0036 - val_mean_absolute_error: 0.0516\n","Epoch 140/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0019 - mean_absolute_error: 0.0366 - val_loss: 9.8920e-04 - val_mean_absolute_error: 0.0234\n","Epoch 141/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0016 - mean_absolute_error: 0.0315 - val_loss: 0.0013 - val_mean_absolute_error: 0.0275\n","Epoch 142/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0017 - mean_absolute_error: 0.0312 - val_loss: 0.0022 - val_mean_absolute_error: 0.0368\n","Epoch 143/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0018 - mean_absolute_error: 0.0342 - val_loss: 0.0013 - val_mean_absolute_error: 0.0282\n","Epoch 144/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 0.0018 - mean_absolute_error: 0.0342 - val_loss: 0.0012 - val_mean_absolute_error: 0.0261\n","Epoch 145/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0016 - mean_absolute_error: 0.0314 - val_loss: 0.0043 - val_mean_absolute_error: 0.0552\n","Epoch 146/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0023 - mean_absolute_error: 0.0378 - val_loss: 0.0023 - val_mean_absolute_error: 0.0385\n","Epoch 147/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0039 - mean_absolute_error: 0.0504 - val_loss: 0.0035 - val_mean_absolute_error: 0.0468\n","Epoch 148/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0019 - mean_absolute_error: 0.0341 - val_loss: 0.0023 - val_mean_absolute_error: 0.0372\n","Epoch 149/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0021 - mean_absolute_error: 0.0342 - val_loss: 0.0015 - val_mean_absolute_error: 0.0321\n","Epoch 150/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 0.0016 - mean_absolute_error: 0.0304 - val_loss: 0.0013 - val_mean_absolute_error: 0.0289\n","Epoch 151/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0015 - mean_absolute_error: 0.0305 - val_loss: 0.0022 - val_mean_absolute_error: 0.0368\n","Epoch 152/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 0.0018 - mean_absolute_error: 0.0359 - val_loss: 0.0017 - val_mean_absolute_error: 0.0341\n","Epoch 153/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0023 - mean_absolute_error: 0.0380 - val_loss: 0.0027 - val_mean_absolute_error: 0.0403\n","Epoch 154/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0020 - mean_absolute_error: 0.0363 - val_loss: 0.0013 - val_mean_absolute_error: 0.0251\n","Epoch 155/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0014 - mean_absolute_error: 0.0267 - val_loss: 0.0015 - val_mean_absolute_error: 0.0287\n","Epoch 156/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0019 - mean_absolute_error: 0.0331 - val_loss: 0.0020 - val_mean_absolute_error: 0.0378\n","Epoch 157/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0015 - mean_absolute_error: 0.0304 - val_loss: 0.0025 - val_mean_absolute_error: 0.0388\n","Epoch 158/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 0.0018 - mean_absolute_error: 0.0324 - val_loss: 0.0019 - val_mean_absolute_error: 0.0390\n","Epoch 159/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0018 - mean_absolute_error: 0.0336 - val_loss: 0.0013 - val_mean_absolute_error: 0.0288\n","Epoch 160/200\n","\u001b[1m15/15\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 0.0011 - mean_absolute_error: 0.0253 - val_loss: 0.0016 - val_mean_absolute_error: 0.0297\n","Epoch 160: early stopping\n","Restoring model weights from the end of the best epoch: 140.\n","\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 54ms/step\n"]},{"output_type":"stream","name":"stderr","text":["WARNING:absl:You are saving your model as an HDF5 file via `model.save()` or `keras.saving.save_model(model)`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')` or `keras.saving.save_model(model, 'my_model.keras')`. \n"]},{"output_type":"stream","name":"stdout","text":["\n","Best Model Performance:\n","Mean Squared Error: 0.0010\n","R² Score: 0.9411\n","Root Mean Squared Error: 0.0308\n","\n","Optimized model saved as 'optimized_sphericity_model.h5'\n","\n","===============================================\n","PART 2: FINDING OPTIMAL PROCESS PARAMETERS\n","===============================================\n","\n","Random Forest Feature Importance:\n","          Feature  Importance\n","3              Ds    0.509125\n","4              De    0.411270\n","1         Time(h)    0.032401\n","2   Magnification    0.014440\n","0             RPM    0.013466\n","6   Ball size_5mm    0.010001\n","5  Ball size_10mm    0.009297\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA90AAAJOCAYAAACqS2TfAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAWIxJREFUeJzt3Xt8z/X///H7ewfvnQ9mttFsmPOZlRxyLudSIhI24aNElIqcNhRJH4mopgzFKknl1EF8FYqcEpKcyxxy2GwYttfvj357f7xtw2avvW1u18vlfbm838/X8/V6PV6vPafue75er7fFMAxDAAAAAAAg3zk5ugAAAAAAAIoqQjcAAAAAACYhdAMAAAAAYBJCNwAAAAAAJiF0AwAAAABgEkI3AAAAAAAmIXQDAAAAAGASQjcAAAAAACYhdAMAAAAAYBJCNwAAwP935MgRubm5ad26dY4u5YbCw8MVFRXl6DKKpG7duqlr166OLgNAEUHoBgAUiPj4eFkslmxfw4cPN2Wf69evV0xMjM6ePWvK9m9F5vn45ZdfHF1Kns2cOVPx8fGOLiNfjRs3TvXr11ejRo1sbVFRUXbj1Wq1qmLFihozZowuXrzowGpvL9eep6tfK1eudHR5WRw9elQxMTHatm1blmUvvfSSPvvsM23fvr3gCwNQ5Lg4ugAAwJ1l3LhxKlu2rF1b9erVTdnX+vXrFRsbq6ioKPn5+ZmyjzvZzJkzVaJEiSIz23ry5EnNnTtXc+fOzbLMarVq9uzZkqSkpCR98cUXGj9+vPbt26ePPvqooEu9bV19nq5Wq1YtB1RzfUePHlVsbKzCw8NVu3Ztu2V16tRRZGSk3njjDc2bN88xBQIoMgjdAIAC1bZtW0VGRjq6jFuSmpoqT09PR5fhMOfPn5eHh4ejy8h3H374oVxcXNSxY8csy1xcXPTEE0/YPj/99NNq2LChFi5cqP/+978KCgoqyFJvW9eep/xU0OOua9euGjt2rGbOnCkvL68C2y+AoofLywEAt5UVK1bovvvuk6enp7y9vdW+fXvt3LnTrs+vv/6qqKgolStXTm5ubgoODlafPn106tQpW5+YmBi98MILkqSyZcvaLnM9ePCgDh48KIvFku2l0RaLRTExMXbbsVgs2rVrlx5//HH5+/urcePGtuUffvih6tWrJ3d3dxUvXlzdunXTkSNH8nTsUVFR8vLy0uHDh9WhQwd5eXmpdOnSevvttyVJO3bsUIsWLeTp6amwsDAtWLDAbv3MS9bXrl2r//znPwoICJCPj4969eqlM2fOZNnfzJkzVa1aNVmtVpUqVUoDBw7Mcil+s2bNVL16dW3evFlNmjSRh4eHXn75ZYWHh2vnzp36v//7P9u5bdasmSTp9OnTGjZsmGrUqCEvLy/5+Piobdu2WS7VXbNmjSwWiz755BO98soruuuuu+Tm5qaWLVvqzz//zFLvzz//rHbt2snf31+enp6qWbOmpk2bZtfn999/16OPPqrixYvLzc1NkZGR+vLLL2/q/C9ZskT169e/qYBlsVjUuHFjGYah/fv329oPHTqkp59+WpUqVZK7u7sCAgLUpUsXHTx40G79zJ/VunXr9NxzzykwMFCenp56+OGHdfLkSbu+hmFowoQJuuuuu+Th4aHmzZtn+Z3ItH//fnXp0kXFixeXh4eH7r33Xi1btsyuz9XnPTY2VqVLl5a3t7ceffRRJSUlKS0tTUOGDFHJkiXl5eWl6OhopaWl3dQ5vBm3Mu4kKS0tTWPHjlVERISsVqtCQ0P14osvZqnx22+/VePGjeXn5ycvLy9VqlTJto01a9bo7rvvliRFR0fbxvDV/ybcf//9Sk1N1bfffptvxw7gzsRMNwCgQCUlJemff/6xaytRooQkaf78+erdu7dat26t1157TefPn9esWbPUuHFjbd26VeHh4ZL+/Z/p/fv3Kzo6WsHBwdq5c6fee+897dy5Uz/99JMsFoseeeQR/fHHH1q4cKGmTp1q20dgYGCWUHMzunTpogoVKujVV1+VYRiSpFdeeUWjR49W165d1bdvX508eVLTp09XkyZNtHXr1jxd0p6enq62bduqSZMmmjx5sj766CM988wz8vT01MiRI9WjRw898sgjeuedd9SrVy81aNAgy+X6zzzzjPz8/BQTE6M9e/Zo1qxZOnTokC1sSf/+MSE2NlatWrXSU089Zeu3adMmrVu3Tq6urrbtnTp1Sm3btlW3bt30xBNPKCgoSM2aNdOgQYPk5eWlkSNHSpJttnf//v1asmSJunTporJly+r48eN699131bRpU+3atUulSpWyq3fSpElycnLSsGHDlJSUpMmTJ6tHjx76+eefbX2+/fZbdejQQSEhIXr22WcVHBys3bt3a+nSpXr22WclSTt37lSjRo1UunRpDR8+XJ6envrkk0/UqVMnffbZZ3r44YdzPO+XL1/Wpk2b9NRTT930zyozSPv7+9vaNm3apPXr16tbt2666667dPDgQc2aNUvNmjXTrl27sszUDho0SP7+/ho7dqwOHjyoN998U88884w+/vhjW58xY8ZowoQJateundq1a6ctW7bogQce0KVLl+y2dfz4cTVs2FDnz5/X4MGDFRAQoLlz5+rBBx/UokWLshz/xIkT5e7uruHDh+vPP//U9OnT5erqKicnJ505c0YxMTH66aefFB8fr7Jly2rMmDE3dV6u/f12dXWVr6+vpFsfdxkZGXrwwQf1448/qn///qpSpYp27NihqVOn6o8//tCSJUsk/TsWOnTooJo1a2rcuHGyWq36888/bQ/Iq1KlisaNG6cxY8aof//+uu+++yRJDRs2tO2/atWqcnd317p16647dgDghgwAAArAnDlzDEnZvgzDMM6dO2f4+fkZ/fr1s1vv2LFjhq+vr137+fPns2x/4cKFhiRj7dq1trbXX3/dkGQcOHDAru+BAwcMScacOXOybEeSMXbsWNvnsWPHGpKM7t272/U7ePCg4ezsbLzyyit27Tt27DBcXFyytOd0PjZt2mRr6927tyHJePXVV21tZ86cMdzd3Q2LxWIkJCTY2n///fcstWZus169esalS5ds7ZMnTzYkGV988YVhGIZx4sQJo1ixYsYDDzxgpKen2/rNmDHDkGR88MEHtramTZsakox33nknyzFUq1bNaNq0aZb2ixcv2m3XMP4951ar1Rg3bpytbfXq1YYko0qVKkZaWpqtfdq0aYYkY8eOHYZhGMaVK1eMsmXLGmFhYcaZM2fstpuRkWF737JlS6NGjRrGxYsX7ZY3bNjQqFChQpY6r/bnn38akozp06dnWda7d2/D09PTOHnypHHy5Enjzz//NKZMmWJYLBajevXqdjVkNzY3bNhgSDLmzZtna8v8WbVq1cpu/aFDhxrOzs7G2bNnDcP438+qffv2dv1efvllQ5LRu3dvW9uQIUMMScYPP/xgazt37pxRtmxZIzw83PYzyTzv1atXtxsn3bt3NywWi9G2bVu7+hs0aGCEhYVd9/xlnqfsfr8zx0h+jLv58+cbTk5OdsdoGIbxzjvvGJKMdevWGYZhGFOnTjUkGSdPnsyx3k2bNuX470CmihUrZjkfAJBbXF4OAChQb7/9tr799lu7l/TvTObZs2fVvXt3/fPPP7aXs7Oz6tevr9WrV9u24e7ubnt/8eJF/fPPP7r33nslSVu2bDGl7gEDBth9Xrx4sTIyMtS1a1e7eoODg1WhQgW7enOrb9++tvd+fn6qVKmSPD097b7CqFKlSvLz87O7tDlT//797WYMn3rqKbm4uGj58uWSpO+++06XLl3SkCFD5OT0v/8V6Nevn3x8fLJcjmy1WhUdHX3T9VutVtt209PTderUKdvlvdn9fKKjo1WsWDHb58xZx8xj27p1qw4cOKAhQ4ZkuXogc+b+9OnT+v7779W1a1edO3fO9vM4deqUWrdurb179+rvv//OsebMWxOunrW+WmpqqgIDAxUYGKiIiAgNGzZMjRo10hdffGGrQbIfm5cvX9apU6cUEREhPz+/bI+9f//+duvfd999Sk9P16FDhyT972c1aNAgu35DhgzJsq3ly5frnnvusbv9wcvLS/3799fBgwe1a9cuu/69evWyGyf169eXYRjq06ePXb/69evryJEjunLlSrbn5mpubm5Zfr/feOMNu2O5lXH36aefqkqVKqpcubLd712LFi0kyfZ7lzlOvvjiC2VkZNyw7pz4+/tnmbkHgNzi8nIAQIG65557sn2Q2t69eyXJ9j/P1/Lx8bG9P336tGJjY5WQkKATJ07Y9UtKSsrHav/n2ku49+7dK8MwVKFChWz7Xx1mcsPNzU2BgYF2bb6+vrrrrrvsQldme3b3al9bk5eXl0JCQmyXQ2cGukqVKtn1K1asmMqVK2dbnql06dJ2ofhGMjIyNG3aNM2cOVMHDhxQenq6bVlAQECW/mXKlLH7nBl8M49t3759kq7/lPs///xThmFo9OjRGj16dLZ9Tpw4odKlS1+3duP/3zpwLTc3N3311VeSpL/++kuTJ0/WiRMn7EK2JF24cEETJ07UnDlz9Pfff9ttL7uxeaNjz/xZXPszDQwMzPIHgkOHDql+/fpZ9lGlShXb8qvP4bX7zrwEPDQ0NEt7RkaGkpKSsv35Xc3Z2VmtWrXKdll+jLu9e/dq9+7dWX5HMmX+e/DYY49p9uzZ6tu3r4YPH66WLVvqkUce0aOPPmoX+G/EMIwsv3cAkFuEbgDAbSFzNmr+/PkKDg7OstzF5X//yeratavWr1+vF154QbVr15aXl5cyMjLUpk2bm5rVyul/oq8Oh9e6NlxlZGTIYrFoxYoVcnZ2ztI/r087zm5b12vPKSTmp2uP/UZeffVVjR49Wn369NH48eNVvHhxOTk5aciQIdn+fPLj2DK3O2zYMLVu3TrbPhERETmunxkms/sjRmaNV4fJ1q1bq3LlyvrPf/5j96C2QYMGac6cORoyZIgaNGggX19fWSwWdevWzbRjz6vbcaxdLbtxl5GRoRo1aui///1vtutk/sHA3d1da9eu1erVq7Vs2TKtXLlSH3/8sVq0aKFvvvkmx2O81pkzZ3L8wxoA3CxCNwDgtlC+fHlJUsmSJXOcKZP+/Z/gVatWKTY21u7BTpkz5VfLKVxnzhBe+8Tka2fablSvYRgqW7asKlaseNPrFYS9e/eqefPmts8pKSlKTExUu3btJElhYWGSpD179qhcuXK2fpcuXdKBAweue/6vltP5XbRokZo3b67333/frv3s2bO2B9rlRubY+O2333KsLfM4XF1db7r+q5UpU0bu7u46cODATfUPCQnR0KFDFRsbq59++sl2e8OiRYvUu3dv2yXV0r+3QFw71m5W5s9q7969dj+rkydPZvkDQVhYmPbs2ZNlG7///rvdthwlP8Zd+fLltX37drVs2fKGM9BOTk5q2bKlWrZsqf/+97969dVXNXLkSK1evVqtWrW64fpXrlzRkSNH9OCDD97E0QFAzrinGwBwW2jdurV8fHz06quv6vLly1mWZz5xPHOG6tpZtzfffDPLOpnfpX1t4PHx8VGJEiW0du1au/aZM2fedL2PPPKInJ2dFRsbm6UWwzDsvr6soL333nt253DWrFm6cuWK2rZtK0lq1aqVihUrprfeesuu9vfff19JSUlq3779Te3H09Mz2zDp7Oyc5Zx8+umn172n+nrq1q2rsmXL6s0338yyv8z9lCxZUs2aNdO7776rxMTELNu40RPrXV1dFRkZqV9++eWm6xo0aJA8PDw0adIkW1t2xz59+vTrXkVxPa1atZKrq6umT59ut93sxnu7du20ceNGbdiwwdaWmpqq9957T+Hh4apatWqeasgv+THuunbtqr///ltxcXFZll24cEGpqamS/r0F5Vq1a9eWJNtXi+X070OmXbt26eLFi3ZPNAeAvGCmGwBwW/Dx8dGsWbPUs2dP1a1bV926dVNgYKAOHz6sZcuWqVGjRpoxY4Z8fHxsX6d1+fJllS5dWt988022M5T16tWTJI0cOVLdunWTq6urOnbsKE9PT/Xt21eTJk1S3759FRkZqbVr1+qPP/646XrLly+vCRMmaMSIETp48KA6deokb29vHThwQJ9//rn69++vYcOG5dv5yY1Lly6pZcuW6tq1q/bs2aOZM2eqcePGthm7wMBAjRgxQrGxsWrTpo0efPBBW7+7775bTzzxxE3tp169epo1a5YmTJigiIgIlSxZUi1atFCHDh00btw4RUdHq2HDhtqxY4c++ugju9nN3HByctKsWbPUsWNH1a5dW9HR0QoJCdHvv/+unTt36uuvv5b070P6GjdurBo1aqhfv34qV66cjh8/rg0bNuivv/7K8j3h13rooYc0cuRIJScn2z1DICcBAQGKjo7WzJkztXv3blWpUkUdOnTQ/Pnz5evrq6pVq2rDhg367rvvbngvdE4CAwM1bNgwTZw4UR06dFC7du20detWrVixIstVA8OHD9fChQvVtm1bDR48WMWLF9fcuXN14MABffbZZ7m6l9kM+THuevbsqU8++UQDBgzQ6tWr1ahRI6Wnp+v333/XJ598oq+//lqRkZEaN26c1q5dq/bt2yssLEwnTpzQzJkzddddd9keNFe+fHn5+fnpnXfekbe3tzw9PVW/fn3b8xu+/fZbeXh46P777zf1vAC4AxTsw9IBAHeq7L4iKzurV682Wrdubfj6+hpubm5G+fLljaioKOOXX36x9fnrr7+Mhx9+2PDz8zN8fX2NLl26GEePHs3yFVqGYRjjx483SpcubTg5Odl9fdj58+eNJ5980vD19TW8vb2Nrl27GidOnMjxK8Ny+uqhzz77zGjcuLHh6elpeHp6GpUrVzYGDhxo7NmzJ9fnI/Orqa7VtGlTo1q1alnaw8LCjPbt22fZ5v/93/8Z/fv3N/z9/Q0vLy+jR48exqlTp7KsP2PGDKNy5cqGq6urERQUZDz11FNZvpIrp30bxr9f59a+fXvD29vb7quhLl68aDz//PNGSEiI4e7ubjRq1MjYsGGD0bRpU7uvGMv86qpPP/3Ubrs5faXbjz/+aNx///2Gt7e34enpadSsWTPLV3zt27fP6NWrlxEcHGy4uroapUuXNjp06GAsWrQo22O42vHjxw0XFxdj/vz5du05/Vwy9+fs7Gz76q4zZ84Y0dHR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QugGAAAAAMAkhG4AAAAAAExC6AYAAAAAwCSEbgAAAAAATELoBgAAAADAJIRuAAAAAABMQugGAAAAAMAkhG4AAAAAAExC6AYAAAAAwCSEbgAAAAAATELoBgAAAADAJIRuAAAAAABMQugGAAAAAMAkLo4uAEVPk1EL5Wx1d3QZt2zz670cXQIAAACAQo6ZbgAAAAAATELoBgAAAADAJIRuAAAAAABMQugGAAAAAMAkhG4AAAAAAExC6AYAAAAAwCSEbgAAAAAATELoBgAAAADAJIRuAAAAAABMQugGAAAAAMAkhG4AAAAAAExC6AYAAAAAwCSEbgAAAAAATELoBgAAAADAJIRuAAAAAABMQugGAAAAAMAkhG4AAAAAAExC6AYAAAAAwCSEbgAAAAAATELoBgAAAADAJIRuAAAAAABMQugGAAAAAMAkhG4HiYqKUqdOnQpkX6dOnVLJkiV18OBBSdKaNWtksVh09uzZHNd555131LFjxwKpDwAAAACKKkK3CSwWy3VfMTExmjZtmuLj4wuknldeeUUPPfSQwsPDb3qdPn36aMuWLfrhhx/MKwwAAAAAijgXRxdQFCUmJtref/zxxxozZoz27Nlja/Py8pKXl1eB1HL+/Hm9//77+vrrr3O1XrFixfT444/rrbfe0n333WdSdQAAAABQtDHTbYLg4GDby9fXVxaLxa7Ny8sry+XlzZo106BBgzRkyBD5+/srKChIcXFxSk1NVXR0tLy9vRUREaEVK1bY7eu3335T27Zt5eXlpaCgIPXs2VP//POPbfny5ctltVp17733Zqlz8+bNioyMlIeHhxo2bGj3hwFJ6tixo7788ktduHAhf08QAAAAANwhCN23kblz56pEiRLauHGjBg0apKeeekpdunRRw4YNtWXLFj3wwAPq2bOnzp8/L0k6e/asWrRooTp16uiXX37RypUrdfz4cXXt2tW2zR9++EH16tXLdn8jR47UG2+8oV9++UUuLi7q06eP3fLIyEhduXJFP//8c7brp6WlKTk52e4FAAAAAPgfQvdtpFatWho1apQqVKigESNGyM3NTSVKlFC/fv1UoUIFjRkzRqdOndKvv/4qSZoxY4bq1KmjV199VZUrV1adOnX0wQcfaPXq1frjjz8kSYcOHVKpUqWy3d8rr7yipk2bqmrVqho+fLjWr1+vixcv2pZ7eHjI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8fHxdtuYMmWKatWqpa1bt2r06NHauHGjJOm7775TYmKiFi9eLEk6d+6cevfurR9//FE//fSTKlSooHbt2uncuXN224uNjVXXrl3166+/ql27durRo4dOnz4tSfr777/VpEkTWa1Wff/999q8ebP69OmjK1euSJI++ugjjRkzRq+88op2796tV199VaNHj9bcuXPz/ZwDAAoXi2EYhqOLAAAAhUNUVJTOnj2rJUuWqFmzZkpPT9cPP/wgSUpPT5evr68eeeQRzZs3T5J07NgxhYSEaMOGDbr33nu1Zs0aNW/eXAkJCXrsscckSadPn9Zdd92l+Ph4de3aVT169NDJkyf1zTff2Pb74osvatmyZdq5c6ekf2e669Spo88//9zW5+DBgypbtqy2bt2q2rVr53gMGRkZ8vPz04IFC9ShQwdJ/850jxo1SuPHj5ckpaamysvLSytWrFCbNm308ssvKyEhQXv27JGrq2uWbUZERGj8+PHq3r27rW3ChAlavny51q9fn5dTDQAoIpjpBgAAeVazZk3be2dnZwUEBKhGjRq2tqCgIEnSiRMn7NZr0KCB7X3x4sVVqVIl7d69W5K0e/duNWrUyK5/o0aNtHfvXqWnp9vaIiMjb6rG48ePq1+/fqpQoYJ8fX3l4+OjlJQUHT58OMdj8fT0lI+Pj63ubdu26b777ss2cKempmrfvn168skn5eXlZXtNmDDB7vJzAMCdycXRBQAAgMLr2hBqsVjs2iwWi6R/Z5fzm6en50316927t06dOqVp06YpLCxMVqtVDRo0yPLwteyOJbNud3f3HLefkpIiSYqLi1P9+vXtljk7O99UjQCAoovQDQAACtxPP/2kMmXKSJLOnDmjP/74Q1WqVJEkValSRevWrbPrv27dOlWsWPG6IbZYsWKSZDcbnrnuzJkz1a5dO0nSkSNH9M8//+Sq3po1a2ru3Lm6fPlylnAeFBSkUqVKaf/+/erRo0eutgsAKPoI3QAAoMCNGzdOAQEBCgoK0siRI1WiRAnb938///zzuvvuuzV+/Hg99thj2rBhg2bMmHHDp4GXLFlS7u7uWrlype666y65ubnJ19dXFSpU0Pz58xUZGank5GS98MIL1525zs4zzzyj6dOnq1u3bhoxYoR8fX31008/6Z577lGlSpUUGxurwYMHy9fXV23atFFaWpp++eUXnTlzRs8991xeTxMAoAjgnm4AAFDgJk2apGeffVb16tXTsWPH9NVXX9lmquvWratPPvlECQkJql69usaMGaNx48YpKirqutt0cXHRW2+9pXfffVelSpXSQw89JEl6//33debMGdWtW1c9e/bU4MGDVbJkyVzVGxAQoO+//14pKSlq2rSp6tWrp7i4ONusd9++fTV79mzNmTNHNWrUUNOmTRUfH2/7GjMAwJ2Lp5cDAIACk/n08jNnzsjPz8/R5QAAYDpmugEAAAAAMAmhGwAAAAAAk3B5OQAAAAAAJmGmGwAAAAAAkxC6AQAAAAAwCaEbAAAAAACTELoBAAAAADAJoRsAAAAAAJMQugEAAAAAMAmhGwAAAAAAkxC6AQAAAAAwCaEbAAAAAACT/D8cl+BnDCTbsgAAAABJRU5ErkJggg==\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","Exploring parameter combinations...\n","RPM values: [400 450 500 550 600]\n","Time values: [24 36 48 60 72]\n","Ball size values: ['10mm' '5mm']\n","Magnification values: [2000 3500 5000]\n","Ds values: [ 2.06  5.71  9.37 13.02 16.68 20.33 23.99 27.64 31.3  34.95]\n","De values: [ 2.61  6.49 10.38 14.27 18.15 22.04 25.93 29.81 33.7  37.58]\n","\n","Focusing on top 3 important features: ['Ds' 'De' 'Time(h)']\n","Corresponding to original features: ['Ds', 'Time(h)', 'De']\n","\n","Exploring focused parameter combinations...\n","Processed 100 combinations. Current max sphericity: 0.9259\n","Processed 200 combinations. Current max sphericity: 0.9408\n","Processed 300 combinations. Current max sphericity: 0.9418\n"]},{"output_type":"stream","name":"stderr","text":["[I 2025-05-01 04:23:21,579] A new study created in memory with name: no-name-34937469-7fc4-4842-9a68-b8ec6d00d50a\n","[I 2025-05-01 04:23:21,613] Trial 0 finished with value: -0.8537159993549989 and parameters: {'RPM': 578, 'Time(h)': 35, 'Ball size': '10mm', 'Magnification': 2265, 'Ds': 8.755149557403396, 'De_factor': 1.038684149525765}. Best is trial 0 with value: -0.8537159993549989.\n","[I 2025-05-01 04:23:21,647] Trial 1 finished with value: -0.8980418763800008 and parameters: {'RPM': 576, 'Time(h)': 27, 'Ball size': '10mm', 'Magnification': 2271, 'Ds': 8.383322977011002, 'De_factor': 1.029216639226345}. Best is trial 1 with value: -0.8980418763800008.\n","[I 2025-05-01 04:23:21,680] Trial 2 finished with value: -0.8929671462999988 and parameters: {'RPM': 450, 'Time(h)': 26, 'Ball size': '5mm', 'Magnification': 2085, 'Ds': 30.261126459964327, 'De_factor': 1.032943392300392}. Best is trial 1 with value: -0.8980418763800008.\n","[I 2025-05-01 04:23:21,714] Trial 3 finished with value: -0.7602930102900006 and parameters: {'RPM': 425, 'Time(h)': 72, 'Ball size': '10mm', 'Magnification': 4182, 'Ds': 10.581386634940735, 'De_factor': 1.4811594788667133}. Best is trial 1 with value: -0.8980418763800008.\n","[I 2025-05-01 04:23:21,747] Trial 4 finished with value: -0.7850746104850004 and parameters: {'RPM': 456, 'Time(h)': 57, 'Ball size': '5mm', 'Magnification': 3076, 'Ds': 7.808245323203506, 'De_factor': 1.2958129410377213}. Best is trial 1 with value: -0.8980418763800008.\n"]},{"output_type":"stream","name":"stdout","text":["\n","Explored 340 parameter combinations.\n","Maximum predicted sphericity: 0.941843\n","Optimal parameters:\n","RPM: 600\n","Time(h): 60\n","Ball size: 10mm\n","Magnification: 2000\n","Ds: 10.27975\n","De: 10.27975\n","Predicted Sphericity: 0.9418432914249989\n","\n","===============================================\n","PART 3: BAYESIAN OPTIMIZATION\n","===============================================\n"]},{"output_type":"stream","name":"stderr","text":["[I 2025-05-01 04:23:21,779] Trial 5 finished with value: -0.8338266541249999 and parameters: {'RPM': 536, 'Time(h)': 55, 'Ball size': '10mm', 'Magnification': 2787, 'Ds': 4.447384508149955, 'De_factor': 1.0948795711311823}. Best is trial 1 with value: -0.8980418763800008.\n","[I 2025-05-01 04:23:21,806] Trial 6 finished with value: -0.8552867369199986 and parameters: {'RPM': 475, 'Time(h)': 57, 'Ball size': '10mm', 'Magnification': 4881, 'Ds': 23.776371083146113, 'De_factor': 1.3137917930758058}. Best is trial 1 with value: -0.8980418763800008.\n","[I 2025-05-01 04:23:21,840] Trial 7 finished with value: -0.93811461326 and parameters: {'RPM': 445, 'Time(h)': 64, 'Ball size': '5mm', 'Magnification': 2407, 'Ds': 13.828186161686823, 'De_factor': 0.9428622638518765}. Best is trial 7 with value: -0.93811461326.\n","[I 2025-05-01 04:23:21,874] Trial 8 finished with value: -0.7787428082849992 and parameters: {'RPM': 565, 'Time(h)': 60, 'Ball size': '5mm', 'Magnification': 2018, 'Ds': 4.188161433776541, 'De_factor': 0.9445802823910132}. Best is trial 7 with value: -0.93811461326.\n","[I 2025-05-01 04:23:21,909] Trial 9 finished with value: -0.8655252665500018 and parameters: {'RPM': 524, 'Time(h)': 43, 'Ball size': '10mm', 'Magnification': 3955, 'Ds': 9.396056128234163, 'De_factor': 1.1672398928982564}. Best is trial 7 with value: -0.93811461326.\n","[I 2025-05-01 04:23:21,966] Trial 10 finished with value: -0.9210519433999987 and parameters: {'RPM': 410, 'Time(h)': 71, 'Ball size': '5mm', 'Magnification': 3145, 'Ds': 16.57964559385444, 'De_factor': 0.8622388366715431}. Best is trial 7 with value: -0.93811461326.\n","[I 2025-05-01 04:23:22,026] Trial 11 finished with value: -0.8914040341600002 and parameters: {'RPM': 404, 'Time(h)': 72, 'Ball size': '5mm', 'Magnification': 3035, 'Ds': 18.587211006597077, 'De_factor': 0.8417677716596519}. Best is trial 7 with value: -0.93811461326.\n","[I 2025-05-01 04:23:22,076] Trial 12 finished with value: -0.9231997164399985 and parameters: {'RPM': 405, 'Time(h)': 66, 'Ball size': '5mm', 'Magnification': 3564, 'Ds': 18.181834804298283, 'De_factor': 0.8024534739892671}. Best is trial 7 with value: -0.93811461326.\n","[I 2025-05-01 04:23:22,128] Trial 13 finished with value: -0.9187145649699986 and parameters: {'RPM': 487, 'Time(h)': 62, 'Ball size': '5mm', 'Magnification': 3714, 'Ds': 17.148141183317083, 'De_factor': 0.8022792806166158}. Best is trial 7 with value: -0.93811461326.\n","[I 2025-05-01 04:23:22,186] Trial 14 finished with value: -0.8870284277699996 and parameters: {'RPM': 442, 'Time(h)': 48, 'Ball size': '5mm', 'Magnification': 4463, 'Ds': 23.16908885161716, 'De_factor': 0.9267306248048065}. Best is trial 7 with value: -0.93811461326.\n","[I 2025-05-01 04:23:22,244] Trial 15 finished with value: -0.9298915729049985 and parameters: {'RPM': 420, 'Time(h)': 65, 'Ball size': '5mm', 'Magnification': 3587, 'Ds': 14.531576358258219, 'De_factor': 0.9283457105294548}. Best is trial 7 with value: -0.93811461326.\n","[I 2025-05-01 04:23:22,302] Trial 16 finished with value: -0.9336378161800009 and parameters: {'RPM': 512, 'Time(h)': 49, 'Ball size': '5mm', 'Magnification': 2722, 'Ds': 13.198413840599862, 'De_factor': 0.9550362022901627}. Best is trial 7 with value: -0.93811461326.\n","[I 2025-05-01 04:23:22,360] Trial 17 finished with value: -0.8907858627699992 and parameters: {'RPM': 510, 'Time(h)': 46, 'Ball size': '5mm', 'Magnification': 2585, 'Ds': 34.83413248692456, 'De_factor': 1.2101121805596282}. Best is trial 7 with value: -0.93811461326.\n","[I 2025-05-01 04:23:22,425] Trial 18 finished with value: -0.9296835177600008 and parameters: {'RPM': 550, 'Time(h)': 39, 'Ball size': '5mm', 'Magnification': 2636, 'Ds': 13.05630505527748, 'De_factor': 0.9766200672409264}. Best is trial 7 with value: -0.93811461326.\n","[I 2025-05-01 04:23:22,481] Trial 19 finished with value: -0.8541734207750009 and parameters: {'RPM': 494, 'Time(h)': 51, 'Ball size': '5mm', 'Magnification': 2484, 'Ds': 21.968510758872466, 'De_factor': 1.125169675521276}. Best is trial 7 with value: -0.93811461326.\n","[I 2025-05-01 04:23:22,538] Trial 20 finished with value: -0.8445862775400012 and parameters: {'RPM': 471, 'Time(h)': 52, 'Ball size': '5mm', 'Magnification': 2929, 'Ds': 12.853603942637942, 'De_factor': 1.2511841775410968}. Best is trial 7 with value: -0.93811461326.\n","[I 2025-05-01 04:23:22,605] Trial 21 finished with value: -0.9394085705199998 and parameters: {'RPM': 423, 'Time(h)': 65, 'Ball size': '5mm', 'Magnification': 3327, 'Ds': 14.401183475708743, 'De_factor': 0.9173115908623938}. Best is trial 21 with value: -0.9394085705199998.\n","[I 2025-05-01 04:23:22,664] Trial 22 finished with value: -0.9454984251600004 and parameters: {'RPM': 441, 'Time(h)': 66, 'Ball size': '5mm', 'Magnification': 3300, 'Ds': 13.840991407359953, 'De_factor': 0.8941187911365933}. Best is trial 22 with value: -0.9454984251600004.\n","[I 2025-05-01 04:23:22,719] Trial 23 finished with value: -0.8806101126000008 and parameters: {'RPM': 434, 'Time(h)': 66, 'Ball size': '5mm', 'Magnification': 3370, 'Ds': 19.960346689011324, 'De_factor': 0.8610122388960676}. Best is trial 22 with value: -0.9454984251600004.\n","[I 2025-05-01 04:23:22,775] Trial 24 finished with value: -0.8618347951850005 and parameters: {'RPM': 467, 'Time(h)': 62, 'Ball size': '5mm', 'Magnification': 3281, 'Ds': 26.620614557079897, 'De_factor': 0.8861303471284617}. Best is trial 22 with value: -0.9454984251600004.\n","[I 2025-05-01 04:23:22,835] Trial 25 finished with value: -0.8857143939050002 and parameters: {'RPM': 431, 'Time(h)': 68, 'Ball size': '5mm', 'Magnification': 3891, 'Ds': 15.6331816726427, 'De_factor': 0.9992669270030103}. Best is trial 22 with value: -0.9454984251600004.\n","[I 2025-05-01 04:23:22,894] Trial 26 finished with value: -0.9304152298899995 and parameters: {'RPM': 453, 'Time(h)': 60, 'Ball size': '5mm', 'Magnification': 3335, 'Ds': 11.51505258489393, 'De_factor': 0.8991867280516868}. Best is trial 22 with value: -0.9454984251600004.\n","[I 2025-05-01 04:23:22,948] Trial 27 finished with value: -0.9026995978350009 and parameters: {'RPM': 418, 'Time(h)': 69, 'Ball size': '5mm', 'Magnification': 4474, 'Ds': 6.342689250539639, 'De_factor': 1.0782215691605472}. Best is trial 22 with value: -0.9454984251600004.\n","[I 2025-05-01 04:23:23,012] Trial 28 finished with value: -0.8040483043350019 and parameters: {'RPM': 438, 'Time(h)': 63, 'Ball size': '5mm', 'Magnification': 2888, 'Ds': 15.286910996627052, 'De_factor': 1.4432286004789243}. Best is trial 22 with value: -0.9454984251600004.\n","[I 2025-05-01 04:23:23,075] Trial 29 finished with value: -0.841087624770001 and parameters: {'RPM': 468, 'Time(h)': 56, 'Ball size': '10mm', 'Magnification': 2303, 'Ds': 19.471782095212294, 'De_factor': 0.9971502233838341}. Best is trial 22 with value: -0.9454984251600004.\n","[I 2025-05-01 04:23:23,130] Trial 30 finished with value: -0.9030665182150007 and parameters: {'RPM': 400, 'Time(h)': 69, 'Ball size': '5mm', 'Magnification': 3799, 'Ds': 11.204834483187312, 'De_factor': 1.0680896872305565}. Best is trial 22 with value: -0.9454984251600004.\n","[I 2025-05-01 04:23:23,185] Trial 31 finished with value: -0.9357690317349998 and parameters: {'RPM': 509, 'Time(h)': 34, 'Ball size': '5mm', 'Magnification': 2721, 'Ds': 13.539931104324921, 'De_factor': 0.9615724980134078}. Best is trial 22 with value: -0.9454984251600004.\n","[I 2025-05-01 04:23:23,243] Trial 32 finished with value: -0.9547823252050024 and parameters: {'RPM': 485, 'Time(h)': 31, 'Ball size': '5mm', 'Magnification': 2366, 'Ds': 6.953973014808537, 'De_factor': 0.8924518915491443}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:23,301] Trial 33 finished with value: -0.7878347106949994 and parameters: {'RPM': 487, 'Time(h)': 31, 'Ball size': '5mm', 'Magnification': 2406, 'Ds': 2.248881254207708, 'De_factor': 0.8990840145166318}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:23,367] Trial 34 finished with value: -0.9535549388150009 and parameters: {'RPM': 456, 'Time(h)': 29, 'Ball size': '10mm', 'Magnification': 2131, 'Ds': 7.337604923339248, 'De_factor': 1.0393911165286678}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:23,439] Trial 35 finished with value: -0.9321271773500025 and parameters: {'RPM': 591, 'Time(h)': 25, 'Ball size': '10mm', 'Magnification': 2227, 'Ds': 6.180369454164127, 'De_factor': 1.0285301960204623}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:23,498] Trial 36 finished with value: -0.8709001709299992 and parameters: {'RPM': 462, 'Time(h)': 30, 'Ball size': '10mm', 'Magnification': 2159, 'Ds': 8.838391828568131, 'De_factor': 1.0366691828681822}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:23,556] Trial 37 finished with value: -0.9469190667850004 and parameters: {'RPM': 483, 'Time(h)': 36, 'Ball size': '10mm', 'Magnification': 4102, 'Ds': 9.945472294061247, 'De_factor': 0.8300981229685094}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:23,631] Trial 38 finished with value: -0.9375638884300009 and parameters: {'RPM': 476, 'Time(h)': 38, 'Ball size': '10mm', 'Magnification': 4273, 'Ds': 7.0145278302239324, 'De_factor': 0.8365034572166566}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:23,692] Trial 39 finished with value: -0.9484281182650004 and parameters: {'RPM': 482, 'Time(h)': 30, 'Ball size': '10mm', 'Magnification': 4841, 'Ds': 9.739123310018288, 'De_factor': 0.8312930721267016}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:23,750] Trial 40 finished with value: -0.8363182846199995 and parameters: {'RPM': 486, 'Time(h)': 28, 'Ball size': '10mm', 'Magnification': 4735, 'Ds': 4.517442453016974, 'De_factor': 0.8397905034405287}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:23,807] Trial 41 finished with value: -0.941538020725001 and parameters: {'RPM': 500, 'Time(h)': 34, 'Ball size': '10mm', 'Magnification': 4803, 'Ds': 9.911514384457787, 'De_factor': 0.8093012438709499}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:23,865] Trial 42 finished with value: -0.9367370970899996 and parameters: {'RPM': 455, 'Time(h)': 37, 'Ball size': '10mm', 'Magnification': 4994, 'Ds': 8.181135662867765, 'De_factor': 0.8848653989216957}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:23,925] Trial 43 finished with value: -0.9381713448900005 and parameters: {'RPM': 477, 'Time(h)': 31, 'Ball size': '10mm', 'Magnification': 4201, 'Ds': 11.134916927918066, 'De_factor': 0.8723955547094819}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:23,984] Trial 44 finished with value: -0.8465330418149993 and parameters: {'RPM': 528, 'Time(h)': 27, 'Ball size': '10mm', 'Magnification': 4072, 'Ds': 4.858168185021971, 'De_factor': 0.8323745940093669}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:24,046] Trial 45 finished with value: -0.767420279929999 and parameters: {'RPM': 448, 'Time(h)': 24, 'Ball size': '10mm', 'Magnification': 4561, 'Ds': 2.1008645372324377, 'De_factor': 0.9975167490563248}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:24,113] Trial 46 finished with value: -0.8058865823549991 and parameters: {'RPM': 497, 'Time(h)': 41, 'Ball size': '10mm', 'Magnification': 2008, 'Ds': 7.997083914383737, 'De_factor': 1.1325523469256644}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:24,176] Trial 47 finished with value: -0.9405417146850007 and parameters: {'RPM': 481, 'Time(h)': 32, 'Ball size': '10mm', 'Magnification': 4320, 'Ds': 10.300040005133209, 'De_factor': 0.85474954467363}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:24,237] Trial 48 finished with value: -0.7573988632150005 and parameters: {'RPM': 461, 'Time(h)': 29, 'Ball size': '10mm', 'Magnification': 4598, 'Ds': 5.397471488364108, 'De_factor': 1.3903456957994782}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:24,295] Trial 49 finished with value: -0.8483702820450005 and parameters: {'RPM': 517, 'Time(h)': 36, 'Ball size': '10mm', 'Magnification': 3115, 'Ds': 3.2942253868969607, 'De_factor': 0.9194945065591297}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:24,370] Trial 50 finished with value: -0.9429178409600013 and parameters: {'RPM': 448, 'Time(h)': 42, 'Ball size': '10mm', 'Magnification': 3994, 'Ds': 7.406374066723608, 'De_factor': 0.8207496642081142}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:24,433] Trial 51 finished with value: -0.9423575562250014 and parameters: {'RPM': 460, 'Time(h)': 44, 'Ball size': '10mm', 'Magnification': 4016, 'Ds': 7.3183017837329745, 'De_factor': 0.8109580927054753}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:24,499] Trial 52 finished with value: -0.9311029677199998 and parameters: {'RPM': 447, 'Time(h)': 40, 'Ball size': '10mm', 'Magnification': 3668, 'Ds': 9.481022186275254, 'De_factor': 0.8277510360384612}. Best is trial 32 with value: -0.9547823252050024.\n","[I 2025-05-01 04:23:24,557] Trial 53 finished with value: -0.955441158960001 and parameters: {'RPM': 503, 'Time(h)': 33, 'Ball size': '10mm', 'Magnification': 4093, 'Ds': 11.843865552073757, 'De_factor': 0.875493248024444}. Best is trial 53 with value: -0.955441158960001.\n","[I 2025-05-01 04:23:24,628] Trial 54 finished with value: -0.9139682339199993 and parameters: {'RPM': 492, 'Time(h)': 34, 'Ball size': '10mm', 'Magnification': 2134, 'Ds': 11.472383940649532, 'De_factor': 0.9459932854178854}. Best is trial 53 with value: -0.955441158960001.\n","[I 2025-05-01 04:23:24,701] Trial 55 finished with value: -0.9530853050200011 and parameters: {'RPM': 506, 'Time(h)': 27, 'Ball size': '10mm', 'Magnification': 3471, 'Ds': 12.378159203431508, 'De_factor': 0.8613301036812344}. Best is trial 53 with value: -0.955441158960001.\n","[I 2025-05-01 04:23:24,765] Trial 56 finished with value: -0.9241921356200009 and parameters: {'RPM': 544, 'Time(h)': 32, 'Ball size': '10mm', 'Magnification': 3453, 'Ds': 9.559783891713298, 'De_factor': 0.8565194428950857}. Best is trial 53 with value: -0.955441158960001.\n","[I 2025-05-01 04:23:24,825] Trial 57 finished with value: -0.835907702675 and parameters: {'RPM': 501, 'Time(h)': 26, 'Ball size': '10mm', 'Magnification': 4364, 'Ds': 12.160343376515197, 'De_factor': 1.1751962659618314}. Best is trial 53 with value: -0.955441158960001.\n","[I 2025-05-01 04:23:24,887] Trial 58 finished with value: -0.9119289310350003 and parameters: {'RPM': 517, 'Time(h)': 28, 'Ball size': '10mm', 'Magnification': 4156, 'Ds': 8.712558015901791, 'De_factor': 0.9742415478801547}. Best is trial 53 with value: -0.955441158960001.\n","[I 2025-05-01 04:23:24,950] Trial 59 finished with value: -0.9332893907399981 and parameters: {'RPM': 503, 'Time(h)': 24, 'Ball size': '10mm', 'Magnification': 3858, 'Ds': 16.570945661406068, 'De_factor': 0.9113087611649048}. Best is trial 53 with value: -0.955441158960001.\n","[I 2025-05-01 04:23:25,021] Trial 60 finished with value: -0.9307355133200008 and parameters: {'RPM': 523, 'Time(h)': 33, 'Ball size': '10mm', 'Magnification': 4652, 'Ds': 5.9914625362758684, 'De_factor': 0.871926493414388}. Best is trial 53 with value: -0.955441158960001.\n","[I 2025-05-01 04:23:25,086] Trial 61 finished with value: -0.9338102114149999 and parameters: {'RPM': 481, 'Time(h)': 29, 'Ball size': '10mm', 'Magnification': 3187, 'Ds': 12.657207918210943, 'De_factor': 0.8901206359291854}. Best is trial 53 with value: -0.955441158960001.\n","[I 2025-05-01 04:23:25,153] Trial 62 finished with value: -0.9399783075799979 and parameters: {'RPM': 491, 'Time(h)': 26, 'Ball size': '10mm', 'Magnification': 3517, 'Ds': 14.687105633053644, 'De_factor': 0.9258048350239497}. Best is trial 53 with value: -0.955441158960001.\n","[I 2025-05-01 04:23:25,221] Trial 63 finished with value: -0.9472805214550002 and parameters: {'RPM': 505, 'Time(h)': 36, 'Ball size': '10mm', 'Magnification': 2973, 'Ds': 10.43139547166031, 'De_factor': 0.8577692552111167}. Best is trial 53 with value: -0.955441158960001.\n","[I 2025-05-01 04:23:25,303] Trial 64 finished with value: -0.9354976111300002 and parameters: {'RPM': 506, 'Time(h)': 35, 'Ball size': '10mm', 'Magnification': 2986, 'Ds': 10.528995111878558, 'De_factor': 0.8033660710113099}. Best is trial 53 with value: -0.955441158960001.\n","[I 2025-05-01 04:23:25,368] Trial 65 finished with value: -0.95685877773 and parameters: {'RPM': 514, 'Time(h)': 37, 'Ball size': '10mm', 'Magnification': 2546, 'Ds': 11.792741328893676, 'De_factor': 0.8528699918616054}. Best is trial 65 with value: -0.95685877773.\n","[I 2025-05-01 04:23:25,438] Trial 66 finished with value: -0.9504545145650006 and parameters: {'RPM': 533, 'Time(h)': 30, 'Ball size': '10mm', 'Magnification': 2526, 'Ds': 12.06085521110369, 'De_factor': 0.8617856722463515}. Best is trial 65 with value: -0.95685877773.\n","[I 2025-05-01 04:23:25,507] Trial 67 finished with value: -0.9482049961150011 and parameters: {'RPM': 537, 'Time(h)': 30, 'Ball size': '10mm', 'Magnification': 2520, 'Ds': 12.229924919234755, 'De_factor': 0.8760852749136534}. Best is trial 65 with value: -0.95685877773.\n","[I 2025-05-01 04:23:25,570] Trial 68 finished with value: -0.9409556944599983 and parameters: {'RPM': 560, 'Time(h)': 27, 'Ball size': '10mm', 'Magnification': 2341, 'Ds': 16.048516329407562, 'De_factor': 0.9323227084894807}. Best is trial 65 with value: -0.95685877773.\n","[I 2025-05-01 04:23:25,635] Trial 69 finished with value: -0.8917481780599981 and parameters: {'RPM': 529, 'Time(h)': 32, 'Ball size': '10mm', 'Magnification': 2782, 'Ds': 29.563063531784493, 'De_factor': 1.2768114450527737}. Best is trial 65 with value: -0.95685877773.\n","[I 2025-05-01 04:23:25,719] Trial 70 finished with value: -0.8554345737750004 and parameters: {'RPM': 513, 'Time(h)': 30, 'Ball size': '10mm', 'Magnification': 2609, 'Ds': 17.520776902767967, 'De_factor': 1.0172725772894373}. Best is trial 65 with value: -0.95685877773.\n","[I 2025-05-01 04:23:25,794] Trial 71 finished with value: -0.9478838978800002 and parameters: {'RPM': 540, 'Time(h)': 29, 'Ball size': '10mm', 'Magnification': 2478, 'Ds': 11.65382928471179, 'De_factor': 0.8752419555039791}. Best is trial 65 with value: -0.95685877773.\n","[I 2025-05-01 04:23:25,862] Trial 72 finished with value: -0.9472841102949998 and parameters: {'RPM': 532, 'Time(h)': 30, 'Ball size': '10mm', 'Magnification': 2438, 'Ds': 13.857056552558925, 'De_factor': 0.9035913422455254}. Best is trial 65 with value: -0.95685877773.\n","[I 2025-05-01 04:23:25,939] Trial 73 finished with value: -0.9463455714700005 and parameters: {'RPM': 552, 'Time(h)': 33, 'Ball size': '10mm', 'Magnification': 2555, 'Ds': 12.75107356306377, 'De_factor': 0.8507162552684518}. Best is trial 65 with value: -0.95685877773.\n","[I 2025-05-01 04:23:26,014] Trial 74 finished with value: -0.913487216 and parameters: {'RPM': 518, 'Time(h)': 27, 'Ball size': '10mm', 'Magnification': 2282, 'Ds': 8.706815086335064, 'De_factor': 0.9564158120158958}. Best is trial 65 with value: -0.95685877773.\n","[I 2025-05-01 04:23:26,086] Trial 75 finished with value: -0.8975754855799991 and parameters: {'RPM': 538, 'Time(h)': 31, 'Ball size': '10mm', 'Magnification': 2189, 'Ds': 14.710243467814523, 'De_factor': 1.059396552171327}. Best is trial 65 with value: -0.95685877773.\n","[I 2025-05-01 04:23:26,152] Trial 76 finished with value: -0.939873518105002 and parameters: {'RPM': 525, 'Time(h)': 25, 'Ball size': '10mm', 'Magnification': 2702, 'Ds': 6.633360898463374, 'De_factor': 0.8792589078951092}. Best is trial 65 with value: -0.95685877773.\n","[I 2025-05-01 04:23:26,220] Trial 77 finished with value: -0.9582402246200001 and parameters: {'RPM': 534, 'Time(h)': 38, 'Ball size': '10mm', 'Magnification': 2358, 'Ds': 12.19138412791574, 'De_factor': 0.8480180807920318}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:26,293] Trial 78 finished with value: -0.8510656699300003 and parameters: {'RPM': 546, 'Time(h)': 38, 'Ball size': '10mm', 'Magnification': 2092, 'Ds': 3.3073691117540314, 'De_factor': 0.8364834382960362}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:26,359] Trial 79 finished with value: -0.8975756043599994 and parameters: {'RPM': 568, 'Time(h)': 45, 'Ball size': '10mm', 'Magnification': 2346, 'Ds': 34.73939312558524, 'De_factor': 0.8006136391595716}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:26,424] Trial 80 finished with value: -0.8834047045950006 and parameters: {'RPM': 471, 'Time(h)': 35, 'Ball size': '10mm', 'Magnification': 2859, 'Ds': 9.293525585562488, 'De_factor': 0.9757729618361983}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:26,489] Trial 81 finished with value: -0.9410736582550007 and parameters: {'RPM': 533, 'Time(h)': 33, 'Ball size': '10mm', 'Magnification': 2398, 'Ds': 12.183299960192818, 'De_factor': 0.9049811441259249}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:26,563] Trial 82 finished with value: -0.9061784367399993 and parameters: {'RPM': 497, 'Time(h)': 30, 'Ball size': '10mm', 'Magnification': 2532, 'Ds': 13.521991575266373, 'De_factor': 1.1024513243469176}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:26,641] Trial 83 finished with value: -0.9476579050800001 and parameters: {'RPM': 521, 'Time(h)': 28, 'Ball size': '10mm', 'Magnification': 2252, 'Ds': 11.184002901517424, 'De_factor': 0.8464070999655877}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:26,724] Trial 84 finished with value: -0.9502292328050005 and parameters: {'RPM': 511, 'Time(h)': 31, 'Ball size': '10mm', 'Magnification': 2064, 'Ds': 12.052367997506725, 'De_factor': 0.865667246218619}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:26,795] Trial 85 finished with value: -0.9200460617550015 and parameters: {'RPM': 512, 'Time(h)': 39, 'Ball size': '5mm', 'Magnification': 2070, 'Ds': 8.038187754454992, 'De_factor': 0.8187349812925675}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:26,871] Trial 86 finished with value: -0.9372393576649984 and parameters: {'RPM': 490, 'Time(h)': 37, 'Ball size': '10mm', 'Magnification': 2214, 'Ds': 15.51535588712152, 'De_factor': 0.8641734295851966}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:26,949] Trial 87 finished with value: -0.9465749875850001 and parameters: {'RPM': 508, 'Time(h)': 32, 'Ball size': '10mm', 'Magnification': 2656, 'Ds': 10.77218005905484, 'De_factor': 0.8896477547777882}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:27,023] Trial 88 finished with value: -0.9265799458500008 and parameters: {'RPM': 496, 'Time(h)': 34, 'Ball size': '5mm', 'Magnification': 2145, 'Ds': 5.685515544947409, 'De_factor': 0.9282045672140955}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:27,097] Trial 89 finished with value: -0.9418427769750004 and parameters: {'RPM': 515, 'Time(h)': 28, 'Ball size': '10mm', 'Magnification': 2012, 'Ds': 13.233739416227957, 'De_factor': 0.8255534142051136}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:27,176] Trial 90 finished with value: -0.915776986084999 and parameters: {'RPM': 521, 'Time(h)': 35, 'Ball size': '10mm', 'Magnification': 2379, 'Ds': 21.26914230744827, 'De_factor': 0.8460032883007055}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:27,256] Trial 91 finished with value: -0.9529323915650011 and parameters: {'RPM': 536, 'Time(h)': 31, 'Ball size': '10mm', 'Magnification': 2514, 'Ds': 12.218627514423899, 'De_factor': 0.8738452603989902}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:27,326] Trial 92 finished with value: -0.9449808037199994 and parameters: {'RPM': 554, 'Time(h)': 31, 'Ball size': '10mm', 'Magnification': 2293, 'Ds': 13.989678253130743, 'De_factor': 0.910816365938531}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:27,399] Trial 93 finished with value: -0.9365483588000012 and parameters: {'RPM': 527, 'Time(h)': 25, 'Ball size': '10mm', 'Magnification': 4995, 'Ds': 9.907310752943458, 'De_factor': 0.864296935986508}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:27,469] Trial 94 finished with value: -0.9343596339000005 and parameters: {'RPM': 544, 'Time(h)': 29, 'Ball size': '10mm', 'Magnification': 2442, 'Ds': 11.851308190207728, 'De_factor': 0.9383484254653269}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:27,549] Trial 95 finished with value: -0.9293846197950008 and parameters: {'RPM': 502, 'Time(h)': 33, 'Ball size': '10mm', 'Magnification': 2805, 'Ds': 8.834554880714464, 'De_factor': 0.8918690968405366}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:27,657] Trial 96 finished with value: -0.9246204748550008 and parameters: {'RPM': 534, 'Time(h)': 54, 'Ball size': '10mm', 'Magnification': 2111, 'Ds': 7.488220245554758, 'De_factor': 0.817455125433554}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:27,789] Trial 97 finished with value: -0.9332978905650003 and parameters: {'RPM': 485, 'Time(h)': 26, 'Ball size': '5mm', 'Magnification': 2598, 'Ds': 12.839885420846336, 'De_factor': 0.8379221356200821}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:27,929] Trial 98 finished with value: -0.8290963027000011 and parameters: {'RPM': 473, 'Time(h)': 31, 'Ball size': '10mm', 'Magnification': 4883, 'Ds': 10.817512308817923, 'De_factor': 1.228522644820332}. Best is trial 77 with value: -0.9582402246200001.\n","[I 2025-05-01 04:23:28,037] Trial 99 finished with value: -0.9549692618350002 and parameters: {'RPM': 465, 'Time(h)': 37, 'Ball size': '10mm', 'Magnification': 4470, 'Ds': 14.571375307531941, 'De_factor': 0.8632294786324416}. Best is trial 77 with value: -0.9582402246200001.\n"]},{"output_type":"stream","name":"stdout","text":["\n","Best process parameters found by Bayesian optimization:\n","RPM: 534\n","Time(h): 38\n","Ball size: 10mm\n","Magnification: 2358\n","Ds: 12.19138412791574\n","De: 10.3385\n","Predicted Sphericity: 0.958240\n","\n","Comparison with grid exploration results:\n","Grid exploration max sphericity: 0.941843\n","Bayesian optimization max sphericity: 0.958240\n","Bayesian optimization found better parameters!\n","\n","===============================================\n","PART 4: VISUALIZING PARAMETER RELATIONSHIPS\n","===============================================\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1800x1200 with 6 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","===============================================\n","PART 5: SUMMARY AND RECOMMENDATIONS\n","===============================================\n","\n","OPTIMAL MODEL HYPERPARAMETERS:\n","n_layers: 2\n","learning_rate: 0.05414469358089124\n","activation: tanh\n","dropout_rate: 0.11567343580734234\n","n_units_0: 23\n","n_units_1: 80\n","batch_size: 8\n","\n","OPTIMAL PROCESS PARAMETERS:\n","Found using: Bayesian optimization\n","RPM: 534\n","Time(h): 38\n","Ball size: 10mm\n","Magnification: 2358\n","Ds: 12.19138412791574\n","De: 10.3385\n","Predicted Sphericity: 0.958240\n","\n","Results saved to 'optimal_parameters.json'\n","Random Forest model saved as 'sphericity_rf_model.joblib'\n","\n","DONE!\n"]}],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split, RandomizedSearchCV\n","from sklearn.preprocessing import StandardScaler, OneHotEncoder\n","from sklearn.compose import ColumnTransformer\n","from sklearn.pipeline import Pipeline\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Dropout\n","from tensorflow.keras.optimizers import Adam\n","from tensorflow.keras.callbacks import EarlyStopping\n","## Remove KerasRegressor import as we're not using it\n","# The keras.wrappers.scikit_learn module may not be available in newer versions\n","from sklearn.metrics import mean_squared_error, r2_score\n","from scipy.stats import randint, uniform\n","import itertools\n","from sklearn.ensemble import RandomForestRegressor\n","!pip install Optuna\n","import optuna\n","import joblib\n","\n","# Set random seed for reproducibility\n","np.random.seed(42)\n","import tensorflow as tf\n","tf.random.set_seed(42)\n","\n","# Load the data\n","df = pd.read_csv('/content/Final_Sphericity values(Sheet1).csv')\n","\n","print(\"Dataset shape:\", df.shape)\n","print(\"\\nFirst 5 rows:\")\n","print(df.head())\n","\n","# Data preprocessing\n","X = df.drop('Sphericity ?', axis=1)  # Features\n","y = df['Sphericity ?']  # Target variable\n","\n","# Split the data into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Create column transformer for preprocessing\n","numeric_features = ['RPM', 'Time(h)', 'Magnification', 'Ds', 'De']\n","categorical_features = ['Ball size']\n","\n","preprocessor = ColumnTransformer(\n","    transformers=[\n","        ('num', StandardScaler(), numeric_features),\n","        ('cat', OneHotEncoder(), categorical_features)\n","    ])\n","\n","# Apply preprocessing\n","X_train_processed = preprocessor.fit_transform(X_train)\n","X_test_processed = preprocessor.transform(X_test)\n","\n","# Get the number of features after preprocessing\n","n_features = X_train_processed.shape[1]\n","print(f\"\\nNumber of features after preprocessing: {n_features}\")\n","\n","# ===============================================================\n","# PART 1: MODEL HYPERPARAMETER OPTIMIZATION USING OPTUNA\n","# ===============================================================\n","print(\"\\n===============================================\")\n","print(\"PART 1: MODEL HYPERPARAMETER OPTIMIZATION\")\n","print(\"===============================================\")\n","\n","def create_model(trial):\n","    \"\"\"Create model with hyperparameters suggested by Optuna trial.\"\"\"\n","    # Define hyperparameters to be tuned\n","    n_layers = trial.suggest_int('n_layers', 1, 5)\n","    learning_rate = trial.suggest_float('learning_rate', 1e-5, 1e-1, log=True)\n","    activation = trial.suggest_categorical('activation', ['relu', 'elu', 'tanh'])\n","    dropout_rate = trial.suggest_float('dropout_rate', 0.0, 0.5)\n","\n","    # Create model\n","    model = Sequential()\n","\n","    # Input layer\n","    n_units = trial.suggest_int(f'n_units_0', 8, 128)\n","    model.add(Dense(n_units, activation=activation, input_dim=n_features))\n","    model.add(Dropout(dropout_rate))\n","\n","    # Hidden layers\n","    for i in range(1, n_layers):\n","        n_units = trial.suggest_int(f'n_units_{i}', 8, 128)\n","        model.add(Dense(n_units, activation=activation))\n","        model.add(Dropout(dropout_rate))\n","\n","    # Output layer\n","    model.add(Dense(1))\n","\n","    # Compile model\n","    model.compile(\n","        optimizer=Adam(learning_rate=learning_rate),\n","        loss='mean_squared_error',\n","        metrics=['mean_absolute_error']\n","    )\n","\n","    return model\n","\n","def objective(trial):\n","    \"\"\"Objective function for Optuna optimization.\"\"\"\n","    # Create and compile model with suggested hyperparameters\n","    model = create_model(trial)\n","\n","    # Define early stopping\n","    early_stopping = EarlyStopping(\n","        monitor='val_loss',\n","        patience=20,\n","        restore_best_weights=True,\n","        verbose=0\n","    )\n","\n","    # Train model\n","    history = model.fit(\n","        X_train_processed, y_train,\n","        epochs=100,\n","        batch_size=trial.suggest_categorical('batch_size', [8, 16, 32, 64]),\n","        validation_split=0.2,\n","        callbacks=[early_stopping],\n","        verbose=0\n","    )\n","\n","    # Evaluate model\n","    val_loss = model.evaluate(X_test_processed, y_test, verbose=0)[0]\n","\n","    return val_loss\n","\n","# Create study\n","study = optuna.create_study(direction='minimize')\n","study.optimize(objective, n_trials=30)\n","\n","# Get best hyperparameters\n","best_params = study.best_params\n","print(\"\\nBest hyperparameters:\")\n","for param, value in best_params.items():\n","    print(f\"{param}: {value}\")\n","\n","# Create and train model with best hyperparameters\n","best_trial = study.best_trial\n","best_model = create_model(best_trial)\n","\n","early_stopping = EarlyStopping(\n","    monitor='val_loss',\n","    patience=20,\n","    restore_best_weights=True,\n","    verbose=1\n",")\n","\n","history = best_model.fit(\n","    X_train_processed, y_train,\n","    epochs=200,\n","    batch_size=best_params['batch_size'],\n","    validation_split=0.2,\n","    callbacks=[early_stopping],\n","    verbose=1\n",")\n","\n","# Evaluate best model\n","y_pred = best_model.predict(X_test_processed)\n","mse = mean_squared_error(y_test, y_pred)\n","r2 = r2_score(y_test, y_pred)\n","\n","print(f\"\\nBest Model Performance:\")\n","print(f\"Mean Squared Error: {mse:.4f}\")\n","print(f\"R² Score: {r2:.4f}\")\n","print(f\"Root Mean Squared Error: {np.sqrt(mse):.4f}\")\n","\n","# Save the optimized model\n","best_model.save('optimized_sphericity_model.h5')\n","print(\"\\nOptimized model saved as 'optimized_sphericity_model.h5'\")\n","\n","# ===============================================================\n","# PART 2: FINDING OPTIMAL PROCESS PARAMETERS FOR MAXIMUM SPHERICITY\n","# ===============================================================\n","print(\"\\n===============================================\")\n","print(\"PART 2: FINDING OPTIMAL PROCESS PARAMETERS\")\n","print(\"===============================================\")\n","\n","# Train a Random Forest model for interpretability\n","rf_model = RandomForestRegressor(n_estimators=200, random_state=42)\n","rf_model.fit(X_train_processed, y_train)\n","\n","# Feature importance from Random Forest\n","feature_names = numeric_features + list(preprocessor.named_transformers_['cat'].get_feature_names_out(['Ball size']))\n","rf_importances = rf_model.feature_importances_\n","\n","# Create a DataFrame of feature importances\n","rf_feature_importance = pd.DataFrame({\n","    'Feature': feature_names,\n","    'Importance': rf_importances\n","})\n","rf_feature_importance = rf_feature_importance.sort_values('Importance', ascending=False)\n","\n","print(\"\\nRandom Forest Feature Importance:\")\n","print(rf_feature_importance)\n","\n","# Plot feature importance\n","plt.figure(figsize=(10, 6))\n","sns.barplot(x='Importance', y='Feature', data=rf_feature_importance)\n","plt.title('Feature Importance (Random Forest)')\n","plt.tight_layout()\n","plt.savefig('rf_feature_importance.png')\n","plt.show()\n","\n","# =======================================================\n","# Find optimal parameters using grid-like exploration\n","# =======================================================\n","\n","# Define a function to predict sphericity for a given set of parameters\n","def predict_sphericity_rf(rpm, time_h, ball_size, magnification, ds, de):\n","    \"\"\"Predict sphericity using the Random Forest model.\"\"\"\n","    # Create a DataFrame with the new data\n","    new_data = pd.DataFrame({\n","        'RPM': [rpm],\n","        'Time(h)': [time_h],\n","        'Ball size': [ball_size],\n","        'Magnification': [magnification],\n","        'Ds': [ds],\n","        'De': [de]\n","    })\n","\n","    # Preprocess the new data\n","    new_data_processed = preprocessor.transform(new_data)\n","\n","    # Make prediction\n","    prediction = rf_model.predict(new_data_processed)[0]\n","\n","    return prediction\n","\n","# Define parameter ranges for grid-like exploration\n","# Use the ranges from the original dataset as boundaries\n","rpm_values = np.linspace(df['RPM'].min(), df['RPM'].max(), 5).astype(int)\n","time_values = np.linspace(df['Time(h)'].min(), df['Time(h)'].max(), 5).astype(int)\n","ball_size_values = df['Ball size'].unique()\n","magnification_values = np.linspace(df['Magnification'].min(), df['Magnification'].max(), 3).astype(int)\n","ds_values = np.linspace(df['Ds'].min(), df['Ds'].max(), 10)\n","de_values = np.linspace(df['De'].min(), df['De'].max(), 10)\n","\n","print(\"\\nExploring parameter combinations...\")\n","print(f\"RPM values: {rpm_values}\")\n","print(f\"Time values: {time_values}\")\n","print(f\"Ball size values: {ball_size_values}\")\n","print(f\"Magnification values: {magnification_values}\")\n","print(f\"Ds values: {np.round(ds_values, 2)}\")\n","print(f\"De values: {np.round(de_values, 2)}\")\n","\n","# Let's focus on the most important parameters according to the Random Forest\n","# First, identify the top 3 most important parameters\n","top_features = rf_feature_importance['Feature'].iloc[:3].values\n","print(f\"\\nFocusing on top 3 important features: {top_features}\")\n","\n","# Function to determine if a feature name belongs to a specific category\n","def get_original_feature_name(feature_name):\n","    if feature_name in numeric_features:\n","        return feature_name\n","    for cat_feature in categorical_features:\n","        for possible_prefix in [f\"{cat_feature}_\", f\"{cat_feature}\"]:\n","            if feature_name.startswith(possible_prefix):\n","                return cat_feature\n","    return None\n","\n","# Map the top features to their original names\n","top_original_features = [get_original_feature_name(feature) for feature in top_features]\n","top_original_features = list(set([f for f in top_original_features if f is not None]))\n","print(f\"Corresponding to original features: {top_original_features}\")\n","\n","# Create parameter combinations focusing on the important parameters\n","results = []\n","\n","# Create a smaller set of combinations to explore\n","if 'RPM' in top_original_features:\n","    selected_rpm_values = rpm_values\n","else:\n","    selected_rpm_values = [rpm_values[0], rpm_values[-1]]  # Just use min and max\n","\n","if 'Time(h)' in top_original_features:\n","    selected_time_values = time_values\n","else:\n","    selected_time_values = [time_values[0], time_values[-1]]  # Just use min and max\n","\n","if 'Ball size' in top_original_features:\n","    selected_ball_size_values = ball_size_values\n","else:\n","    selected_ball_size_values = [ball_size_values[0]]  # Just use the first value\n","\n","if 'Magnification' in top_original_features:\n","    selected_magnification_values = magnification_values\n","else:\n","    selected_magnification_values = [magnification_values[0]]  # Just use one value\n","\n","# For Ds and De, which are likely to be important, explore the ratio\n","# Instead of exploring all combinations, we'll look at a set of aspect ratios\n","ds_de_ratios = np.linspace(0.5, 1.0, 10)  # Aspect ratios from 0.5 to 1.0\n","\n","print(\"\\nExploring focused parameter combinations...\")\n","\n","count = 0\n","max_sphericity = 0\n","optimal_params = None\n","\n","# We'll explore the parameter space more efficiently\n","for rpm in selected_rpm_values:\n","    for time_h in selected_time_values:\n","        for ball_size in selected_ball_size_values:\n","            for magnification in selected_magnification_values:\n","                # For each combination of other parameters, explore Ds and De with aspect ratios\n","                for ds in np.linspace(df['Ds'].min(), df['Ds'].max(), 5):\n","                    for ratio in ds_de_ratios:\n","                        de = ds / ratio  # Calculate De based on the aspect ratio\n","\n","                        # Check if De is within reasonable bounds\n","                        if de < df['De'].min() or de > df['De'].max():\n","                            continue\n","\n","                        # Predict sphericity\n","                        sphericity = predict_sphericity_rf(rpm, time_h, ball_size, magnification, ds, de)\n","\n","                        # Keep track of parameters that yield high sphericity\n","                        if sphericity > max_sphericity:\n","                            max_sphericity = sphericity\n","                            optimal_params = {\n","                                'RPM': rpm,\n","                                'Time(h)': time_h,\n","                                'Ball size': ball_size,\n","                                'Magnification': magnification,\n","                                'Ds': ds,\n","                                'De': de,\n","                                'Predicted Sphericity': sphericity\n","                            }\n","\n","                        count += 1\n","                        if count % 100 == 0:\n","                            print(f\"Processed {count} combinations. Current max sphericity: {max_sphericity:.4f}\")\n","\n","print(f\"\\nExplored {count} parameter combinations.\")\n","print(f\"Maximum predicted sphericity: {max_sphericity:.6f}\")\n","print(\"Optimal parameters:\")\n","for param, value in optimal_params.items():\n","    print(f\"{param}: {value}\")\n","\n","# ===============================================================\n","# PART 3: BAYESIAN OPTIMIZATION FOR FINDING OPTIMAL PARAMETERS\n","# ===============================================================\n","print(\"\\n===============================================\")\n","print(\"PART 3: BAYESIAN OPTIMIZATION\")\n","print(\"===============================================\")\n","\n","def process_parameter_objective(trial):\n","    \"\"\"Objective function for Optuna optimization of process parameters.\"\"\"\n","    # Suggest values for each parameter\n","    rpm = trial.suggest_int('RPM', int(df['RPM'].min()), int(df['RPM'].max()))\n","    time_h = trial.suggest_int('Time(h)', int(df['Time(h)'].min()), int(df['Time(h)'].max()))\n","    ball_size = trial.suggest_categorical('Ball size', df['Ball size'].unique())\n","    magnification = trial.suggest_int('Magnification', int(df['Magnification'].min()), int(df['Magnification'].max()))\n","\n","    # For Ds and De, we'll enforce a relationship to maintain realistic values\n","    ds = trial.suggest_float('Ds', df['Ds'].min(), df['Ds'].max())\n","    # Suggest De as a factor of Ds to maintain physical relationships\n","    factor = trial.suggest_float('De_factor', 0.8, 1.5)  # De can be smaller or larger than Ds\n","    de = ds * factor\n","\n","    # Ensure De is within realistic bounds\n","    de = max(min(de, df['De'].max()), df['De'].min())\n","\n","    # Predict sphericity\n","    sphericity = predict_sphericity_rf(rpm, time_h, ball_size, magnification, ds, de)\n","\n","    # We want to maximize sphericity, so return the negative value (Optuna minimizes by default)\n","    return -sphericity\n","\n","# Create a new study for process parameter optimization\n","param_study = optuna.create_study(direction='minimize')  # Remember, we're returning -sphericity\n","param_study.optimize(process_parameter_objective, n_trials=100)\n","\n","# Get best process parameters\n","best_process_params = param_study.best_params\n","best_sphericity = -param_study.best_value  # Convert back to positive\n","\n","print(\"\\nBest process parameters found by Bayesian optimization:\")\n","for param, value in best_process_params.items():\n","    if param == 'De_factor':\n","        de = best_process_params['Ds'] * value\n","        print(f\"De: {de:.4f}\")\n","    else:\n","        print(f\"{param}: {value}\")\n","print(f\"Predicted Sphericity: {best_sphericity:.6f}\")\n","\n","# Compare with grid-like exploration results\n","print(\"\\nComparison with grid exploration results:\")\n","print(f\"Grid exploration max sphericity: {max_sphericity:.6f}\")\n","print(f\"Bayesian optimization max sphericity: {best_sphericity:.6f}\")\n","\n","if best_sphericity > max_sphericity:\n","    print(\"Bayesian optimization found better parameters!\")\n","else:\n","    print(\"Grid-like exploration found similar or better parameters.\")\n","\n","# ===============================================================\n","# PART 4: VISUALIZE PARAMETER RELATIONSHIPS\n","# ===============================================================\n","print(\"\\n===============================================\")\n","print(\"PART 4: VISUALIZING PARAMETER RELATIONSHIPS\")\n","print(\"===============================================\")\n","\n","# Create a function to generate a parameter importance visualization\n","def plot_parameter_importance():\n","    \"\"\"Generate a plot of parameter importance from optimization history.\"\"\"\n","    param_importances = optuna.importance.get_param_importances(param_study)\n","\n","    plt.figure(figsize=(10, 6))\n","    importance_df = pd.DataFrame(\n","        {'Parameter': list(param_importances.keys()),\n","         'Importance': list(param_importances.values())}\n","    )\n","    sns.barplot(x='Importance', y='Parameter', data=importance_df)\n","    plt.title('Parameter Importance for Sphericity')\n","    plt.tight_layout()\n","    plt.savefig('parameter_importance.png')\n","    plt.show()\n","\n","# Create a function to visualize how sphericity varies with key parameters\n","def plot_parameter_effects():\n","    \"\"\"Plot how sphericity varies with changes in key parameters.\"\"\"\n","    # Get the optimization history\n","    trials_df = param_study.trials_dataframe()\n","\n","    # Convert the objective to positive sphericity values\n","    trials_df['sphericity'] = -trials_df['value']\n","\n","    # Create parameter vs. sphericity plots\n","    plt.figure(figsize=(18, 12))\n","\n","    # RPM vs Sphericity\n","    plt.subplot(2, 3, 1)\n","    sns.scatterplot(x='params_RPM', y='sphericity', data=trials_df)\n","    plt.title('RPM vs Sphericity')\n","\n","    # Time vs Sphericity\n","    plt.subplot(2, 3, 2)\n","    sns.scatterplot(x='params_Time(h)', y='sphericity', data=trials_df)\n","    plt.title('Time vs Sphericity')\n","\n","    # Ds vs Sphericity\n","    plt.subplot(2, 3, 3)\n","    sns.scatterplot(x='params_Ds', y='sphericity', data=trials_df)\n","    plt.title('Ds vs Sphericity')\n","\n","    # De factor vs Sphericity\n","    plt.subplot(2, 3, 4)\n","    sns.scatterplot(x='params_De_factor', y='sphericity', data=trials_df)\n","    plt.title('De Factor vs Sphericity')\n","\n","    # Calculate De from Ds and De_factor for each trial\n","    de_values = trials_df['params_Ds'] * trials_df['params_De_factor']\n","    sphericity_values = trials_df['sphericity']\n","\n","    # De vs Sphericity\n","    plt.subplot(2, 3, 5)\n","    plt.scatter(de_values, sphericity_values)\n","    plt.title('De vs Sphericity')\n","\n","    # Ds/De ratio vs Sphericity\n","    plt.subplot(2, 3, 6)\n","    ds_de_ratio = trials_df['params_Ds'] / (trials_df['params_Ds'] * trials_df['params_De_factor'])\n","    plt.scatter(ds_de_ratio, sphericity_values)\n","    plt.title('Ds/De Ratio vs Sphericity')\n","\n","    plt.tight_layout()\n","    plt.savefig('parameter_effects.png')\n","    plt.show()\n","\n","# Plot parameter importance and effects\n","try:\n","    plot_parameter_importance()\n","except Exception as e:\n","    print(f\"Couldn't plot parameter importance: {e}\")\n","\n","try:\n","    plot_parameter_effects()\n","except Exception as e:\n","    print(f\"Couldn't plot parameter effects: {e}\")\n","\n","# ===============================================================\n","# PART 5: SUMMARY AND RECOMMENDATIONS\n","# ===============================================================\n","print(\"\\n===============================================\")\n","print(\"PART 5: SUMMARY AND RECOMMENDATIONS\")\n","print(\"===============================================\")\n","\n","print(\"\\nOPTIMAL MODEL HYPERPARAMETERS:\")\n","for param, value in best_params.items():\n","    print(f\"{param}: {value}\")\n","\n","print(\"\\nOPTIMAL PROCESS PARAMETERS:\")\n","# Combine results from both exploration methods\n","if best_sphericity > max_sphericity:\n","    optimal_process = best_process_params\n","    optimal_sphericity = best_sphericity\n","    method = \"Bayesian optimization\"\n","else:\n","    optimal_process = {k: v for k, v in optimal_params.items() if k != 'Predicted Sphericity'}\n","    optimal_sphericity = max_sphericity\n","    method = \"Grid-like exploration\"\n","\n","print(f\"Found using: {method}\")\n","for param, value in optimal_process.items():\n","    if param == 'De_factor':\n","        de = optimal_process['Ds'] * value\n","        print(f\"De: {de:.4f}\")\n","    else:\n","        print(f\"{param}: {value}\")\n","print(f\"Predicted Sphericity: {optimal_sphericity:.6f}\")\n","\n","# Save the results\n","results = {\n","    'model_hyperparameters': best_params,\n","    'process_parameters': optimal_process,\n","    'predicted_sphericity': float(optimal_sphericity)\n","}\n","\n","# Save as JSON for future reference\n","import json\n","with open('optimal_parameters.json', 'w') as f:\n","    json.dump(results, f, indent=4)\n","\n","print(\"\\nResults saved to 'optimal_parameters.json'\")\n","\n","# Save the Random Forest model for future use\n","joblib.dump(rf_model, 'sphericity_rf_model.joblib')\n","print(\"Random Forest model saved as 'sphericity_rf_model.joblib'\")\n","\n","print(\"\\nDONE!\")"]},{"cell_type":"code","source":[],"metadata":{"id":"3gTotjph7uFM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler, OneHotEncoder\n","from sklearn.compose import ColumnTransformer\n","from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n","from tensorflow.keras.models import load_model\n","import tensorflow as tf\n","\n","# Set random seed for reproducibility\n","np.random.seed(42)\n","tf.random.set_seed(42)\n","\n","# Load the data\n","df = pd.read_csv('/content/Final_Sphericity values(Sheet1).csv')\n","\n","# Data preprocessing\n","X = df.drop('Sphericity ?', axis=1)  # Features\n","y = df['Sphericity ?']  # Target variable\n","\n","# Split the data into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Create column transformer for preprocessing\n","numeric_features = ['RPM', 'Time(h)', 'Magnification', 'Ds', 'De']\n","categorical_features = ['Ball size']\n","\n","preprocessor = ColumnTransformer(\n","    transformers=[\n","        ('num', StandardScaler(), numeric_features),\n","        ('cat', OneHotEncoder(sparse_output=False), categorical_features)\n","    ])\n","\n","# Apply preprocessing\n","X_train_processed = preprocessor.fit_transform(X_train)\n","X_test_processed = preprocessor.transform(X_test)\n","\n","# Load the trained model - change the filename if you saved it with a different name\n","try:\n","    model = load_model('optimized_sphericity_model.h5')\n","    print(\"Loaded optimized model\")\n","except:\n","    try:\n","        model = load_model('sphericity_prediction_model.h5')\n","        print(\"Loaded basic model\")\n","    except:\n","        print(\"No saved model found. Please train the model first.\")\n","        exit()\n","\n","# =============================================\n","# Model Evaluation on Test Data\n","# =============================================\n","print(\"\\n============================================\")\n","print(\"MODEL EVALUATION METRICS\")\n","print(\"============================================\")\n","\n","# Make predictions\n","y_pred = model.predict(X_test_processed).flatten()\n","\n","# Calculate metrics\n","mse = mean_squared_error(y_test, y_pred)\n","rmse = np.sqrt(mse)\n","mae = mean_absolute_error(y_test, y_pred)\n","r2 = r2_score(y_test, y_pred)\n","\n","# Calculate percentage errors\n","absolute_percentage_errors = np.abs((y_test.values - y_pred) / y_test.values) * 100\n","mape = np.mean(absolute_percentage_errors)  # Mean Absolute Percentage Error\n","\n","print(f\"Mean Squared Error (MSE): {mse:.6f}\")\n","print(f\"Root Mean Squared Error (RMSE): {rmse:.6f}\")\n","print(f\"Mean Absolute Error (MAE): {mae:.6f}\")\n","print(f\"R² Score: {r2:.6f}\")\n","print(f\"Mean Absolute Percentage Error (MAPE): {mape:.2f}%\")\n","\n","# Determine if model is performing well\n","if r2 >= 0.8:\n","    print(\"\\nModel performance: EXCELLENT\")\n","    print(\"The model explains 80% or more of the variance in sphericity values.\")\n","elif r2 >= 0.6:\n","    print(\"\\nModel performance: GOOD\")\n","    print(\"The model explains 60% or more of the variance in sphericity values.\")\n","elif r2 >= 0.4:\n","    print(\"\\nModel performance: MODERATE\")\n","    print(\"The model explains 40% or more of the variance in sphericity values.\")\n","else:\n","    print(\"\\nModel performance: POOR\")\n","    print(\"The model explains less than 40% of the variance in sphericity values.\")\n","    print(\"Consider collecting more data or trying a different model architecture.\")\n","\n","# Calculate accuracy within tolerance\n","# For regression problems, we can define \"accuracy\" as predictions within a certain tolerance\n","tolerance_5pct = np.mean(absolute_percentage_errors <= 5) * 100\n","tolerance_10pct = np.mean(absolute_percentage_errors <= 10) * 100\n","tolerance_15pct = np.mean(absolute_percentage_errors <= 15) * 100\n","\n","print(f\"\\nPrediction within 5% of actual value: {tolerance_5pct:.2f}%\")\n","print(f\"Prediction within 10% of actual value: {tolerance_10pct:.2f}%\")\n","print(f\"Prediction within 15% of actual value: {tolerance_15pct:.2f}%\")\n","\n","# =============================================\n","# Visualizations\n","# =============================================\n","print(\"\\n============================================\")\n","print(\"GENERATING VISUALIZATIONS\")\n","print(\"============================================\")\n","\n","# Create a figure with multiple plots\n","plt.figure(figsize=(20, 12))\n","\n","# Plot 1: Predicted vs Actual values\n","plt.subplot(2, 3, 1)\n","plt.scatter(y_test, y_pred, alpha=0.7)\n","# Add perfect prediction line\n","min_val = min(min(y_test), min(y_pred))\n","max_val = max(max(y_test), max(y_pred))\n","plt.plot([min_val, max_val], [min_val, max_val], 'r--')\n","plt.xlabel('Actual Sphericity')\n","plt.ylabel('Predicted Sphericity')\n","plt.title('Predicted vs Actual Sphericity Values')\n","plt.grid(True)\n","\n","# Plot 2: Residuals plot (y_true - y_pred)\n","plt.subplot(2, 3, 2)\n","residuals = y_test - y_pred\n","plt.scatter(y_pred, residuals, alpha=0.7)\n","plt.axhline(y=0, color='r', linestyle='--')\n","plt.xlabel('Predicted Sphericity')\n","plt.ylabel('Residuals')\n","plt.title('Residuals Plot')\n","plt.grid(True)\n","\n","# Plot 3: Histogram of residuals\n","plt.subplot(2, 3, 3)\n","plt.hist(residuals, bins=20, alpha=0.7, color='blue', edgecolor='black')\n","plt.axvline(x=0, color='r', linestyle='--')\n","plt.xlabel('Residuals')\n","plt.ylabel('Frequency')\n","plt.title('Histogram of Residuals')\n","plt.grid(True)\n","\n","# Plot 4: Absolute percentage error for each test sample\n","plt.subplot(2, 3, 4)\n","plt.bar(range(len(absolute_percentage_errors)), absolute_percentage_errors)\n","plt.axhline(y=10, color='r', linestyle='--', label='10% Error')\n","plt.xlabel('Test Sample Index')\n","plt.ylabel('Absolute Percentage Error (%)')\n","plt.title('Absolute Percentage Error for Each Test Sample')\n","plt.legend()\n","plt.grid(True)\n","\n","# Plot 5: Regression Error Characteristic (REC) Curve\n","plt.subplot(2, 3, 5)\n","error_thresholds = np.linspace(0, 50, 100)  # Error thresholds from 0% to 50%\n","accuracies = [np.mean(absolute_percentage_errors <= threshold) * 100 for threshold in error_thresholds]\n","plt.plot(error_thresholds, accuracies)\n","plt.xlabel('Error Tolerance (%)')\n","plt.ylabel('Percentage of Predictions Within Tolerance')\n","plt.title('Regression Error Characteristic (REC) Curve')\n","plt.grid(True)\n","\n","# Plot 6: Compare model predictions vs actual by a key feature\n","# Choose the most important feature (assuming Ds is important based on physics)\n","plt.subplot(2, 3, 6)\n","sorted_indices = np.argsort(X_test['Ds'].values)\n","plt.plot(X_test['Ds'].values[sorted_indices], y_test.values[sorted_indices], 'b-', label='Actual')\n","plt.plot(X_test['Ds'].values[sorted_indices], y_pred[sorted_indices], 'r-', label='Predicted')\n","plt.xlabel('Ds')\n","plt.ylabel('Sphericity')\n","plt.title('Actual vs Predicted Sphericity by Ds')\n","plt.legend()\n","plt.grid(True)\n","\n","plt.tight_layout()\n","plt.savefig('model_evaluation.png')\n","plt.show()\n","\n","# =============================================\n","# Feature-by-Feature Analysis\n","# =============================================\n","\n","# Create a dataframe with predictions and actual values\n","results_df = X_test.copy()\n","results_df['Actual_Sphericity'] = y_test.values\n","results_df['Predicted_Sphericity'] = y_pred\n","results_df['Absolute_Error'] = np.abs(results_df['Actual_Sphericity'] - results_df['Predicted_Sphericity'])\n","results_df['Percentage_Error'] = (results_df['Absolute_Error'] / results_df['Actual_Sphericity']) * 100\n","\n","print(\"\\n============================================\")\n","print(\"FEATURE-BY-FEATURE ANALYSIS\")\n","print(\"============================================\")\n","\n","# Analyze RPM influence\n","print(\"\\nAnalysis by RPM:\")\n","rpm_groups = results_df.groupby('RPM').agg({\n","    'Actual_Sphericity': 'mean',\n","    'Predicted_Sphericity': 'mean',\n","    'Absolute_Error': 'mean',\n","    'Percentage_Error': 'mean'\n","})\n","print(rpm_groups)\n","\n","# Analyze Time influence\n","print(\"\\nAnalysis by Time:\")\n","time_groups = results_df.groupby('Time(h)').agg({\n","    'Actual_Sphericity': 'mean',\n","    'Predicted_Sphericity': 'mean',\n","    'Absolute_Error': 'mean',\n","    'Percentage_Error': 'mean'\n","})\n","print(time_groups)\n","\n","# Analyze Ball size influence\n","print(\"\\nAnalysis by Ball size:\")\n","ball_groups = results_df.groupby('Ball size').agg({\n","    'Actual_Sphericity': 'mean',\n","    'Predicted_Sphericity': 'mean',\n","    'Absolute_Error': 'mean',\n","    'Percentage_Error': 'mean'\n","})\n","print(ball_groups)\n","\n","print(\"\\n============================================\")\n","print(\"CONCLUSION\")\n","print(\"============================================\")\n","\n","# Provide a final assessment based on R² and MAPE\n","if r2 >= 0.7 and mape <= 10:\n","    print(\"The model demonstrates strong predictive capability for sphericity values.\")\n","elif r2 >= 0.5 and mape <= 15:\n","    print(\"The model shows good predictive capability for sphericity values, but has room for improvement.\")\n","else:\n","    print(\"The model's predictive capability is limited. Consider collecting more data or exploring different modeling approaches.\")\n","\n","# Top 5 worst predictions\n","print(\"\\nTop 5 worst predictions (highest percentage error):\")\n","worst_predictions = results_df.sort_values('Percentage_Error', ascending=False).head(5)\n","for idx, row in worst_predictions.iterrows():\n","    print(f\"Sample {idx}:\")\n","    print(f\"  RPM: {row['RPM']}, Time: {row['Time(h)']}h, Ball size: {row['Ball size']}\")\n","    print(f\"  Ds: {row['Ds']:.2f}, De: {row['De']:.2f}\")\n","    print(f\"  Actual Sphericity: {row['Actual_Sphericity']:.6f}\")\n","    print(f\"  Predicted Sphericity: {row['Predicted_Sphericity']:.6f}\")\n","    print(f\"  Percentage Error: {row['Percentage_Error']:.2f}%\")\n","    print()\n","\n","# Save results to CSV\n","results_df.to_csv('model_evaluation_results.csv')\n","print(\"\\nDetailed results saved to 'model_evaluation_results.csv'\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"5AjQ7V4BXuUx","executionInfo":{"status":"ok","timestamp":1746074337228,"user_tz":-330,"elapsed":3352,"user":{"displayName":"052_ Manohar","userId":"01100236410199775712"}},"outputId":"af955e31-572a-4070-9191-31f5518e95a2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:absl:Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.\n"]},{"output_type":"stream","name":"stdout","text":["Loaded optimized model\n","\n","============================================\n","MODEL EVALUATION METRICS\n","============================================\n","\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 87ms/step\n","Mean Squared Error (MSE): 0.000951\n","Root Mean Squared Error (RMSE): 0.030845\n","Mean Absolute Error (MAE): 0.026902\n","R² Score: 0.941072\n","Mean Absolute Percentage Error (MAPE): 3.56%\n","\n","Model performance: EXCELLENT\n","The model explains 80% or more of the variance in sphericity values.\n","\n","Prediction within 5% of actual value: 83.33%\n","Prediction within 10% of actual value: 100.00%\n","Prediction within 15% of actual value: 100.00%\n","\n","============================================\n","GENERATING VISUALIZATIONS\n","============================================\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x1200 with 6 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","============================================\n","FEATURE-BY-FEATURE ANALYSIS\n","============================================\n","\n","Analysis by RPM:\n","     Actual_Sphericity  Predicted_Sphericity  Absolute_Error  Percentage_Error\n","RPM                                                                           \n","400           0.800429              0.811224        0.029414          3.941274\n","600           0.830607              0.841981        0.022458          2.880044\n","\n","Analysis by Time:\n","         Actual_Sphericity  Predicted_Sphericity  Absolute_Error  \\\n","Time(h)                                                            \n","24                0.744843              0.762032        0.034587   \n","48                0.857720              0.862714        0.016472   \n","72                0.851300              0.859552        0.025177   \n","\n","         Percentage_Error  \n","Time(h)                    \n","24               4.923129  \n","48               1.911853  \n","72               3.133662  \n","\n","Analysis by Ball size:\n","           Actual_Sphericity  Predicted_Sphericity  Absolute_Error  \\\n","Ball size                                                            \n","10mm                0.787216              0.795002        0.026322   \n","5mm                 0.859546              0.876988        0.028063   \n","\n","           Percentage_Error  \n","Ball size                    \n","10mm               3.649958  \n","5mm                3.374240  \n","\n","============================================\n","CONCLUSION\n","============================================\n","The model demonstrates strong predictive capability for sphericity values.\n","\n","Top 5 worst predictions (highest percentage error):\n","Sample 68:\n","  RPM: 400, Time: 24h, Ball size: 10mm\n","  Ds: 5.68, De: 14.36\n","  Actual Sphericity: 0.460677\n","  Predicted Sphericity: 0.505836\n","  Percentage Error: 9.80%\n","\n","Sample 96:\n","  RPM: 400, Time: 24h, Ball size: 10mm\n","  Ds: 10.85, De: 17.87\n","  Actual Sphericity: 0.641991\n","  Predicted Sphericity: 0.583844\n","  Percentage Error: 9.06%\n","\n","Sample 153:\n","  RPM: 400, Time: 24h, Ball size: 5mm\n","  Ds: 2.06, De: 2.99\n","  Actual Sphericity: 0.712067\n","  Predicted Sphericity: 0.769881\n","  Percentage Error: 8.12%\n","\n","Sample 113:\n","  RPM: 400, Time: 72h, Ball size: 10mm\n","  Ds: 4.17, De: 8.54\n","  Actual Sphericity: 0.540242\n","  Predicted Sphericity: 0.583956\n","  Percentage Error: 8.09%\n","\n","Sample 30:\n","  RPM: 600, Time: 24h, Ball size: 10mm\n","  Ds: 4.37, De: 8.21\n","  Actual Sphericity: 0.577510\n","  Predicted Sphericity: 0.622518\n","  Percentage Error: 7.79%\n","\n","\n","Detailed results saved to 'model_evaluation_results.csv'\n"]}]}]}